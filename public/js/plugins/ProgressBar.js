/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.l = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// identity function for calling harmory imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };

/******/ 	// define getter function for harmory exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		Object.defineProperty(exports, name, {
/******/ 			configurable: false,
/******/ 			enumerable: true,
/******/ 			get: getter
/******/ 		});
/******/ 	};

/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};

/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 9);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports) {

eval("// Utility functions\n\nvar PREFIXES = 'Webkit Moz O ms'.split(' ');\nvar FLOAT_COMPARISON_EPSILON = 0.001;\n\n// Copy all attributes from source object to destination object.\n// destination object is mutated.\nfunction extend(destination, source, recursive) {\n    destination = destination || {};\n    source = source || {};\n    recursive = recursive || false;\n\n    for (var attrName in source) {\n        if (source.hasOwnProperty(attrName)) {\n            var destVal = destination[attrName];\n            var sourceVal = source[attrName];\n            if (recursive && isObject(destVal) && isObject(sourceVal)) {\n                destination[attrName] = extend(destVal, sourceVal, recursive);\n            } else {\n                destination[attrName] = sourceVal;\n            }\n        }\n    }\n\n    return destination;\n}\n\n// Renders templates with given variables. Variables must be surrounded with\n// braces without any spaces, e.g. {variable}\n// All instances of variable placeholders will be replaced with given content\n// Example:\n// render('Hello, {message}!', {message: 'world'})\nfunction render(template, vars) {\n    var rendered = template;\n\n    for (var key in vars) {\n        if (vars.hasOwnProperty(key)) {\n            var val = vars[key];\n            var regExpString = '\\\\{' + key + '\\\\}';\n            var regExp = new RegExp(regExpString, 'g');\n\n            rendered = rendered.replace(regExp, val);\n        }\n    }\n\n    return rendered;\n}\n\nfunction setStyle(element, style, value) {\n    var elStyle = element.style;  // cache for performance\n\n    for (var i = 0; i < PREFIXES.length; ++i) {\n        var prefix = PREFIXES[i];\n        elStyle[prefix + capitalize(style)] = value;\n    }\n\n    elStyle[style] = value;\n}\n\nfunction setStyles(element, styles) {\n    forEachObject(styles, function(styleValue, styleName) {\n        // Allow disabling some individual styles by setting them\n        // to null or undefined\n        if (styleValue === null || styleValue === undefined) {\n            return;\n        }\n\n        // If style's value is {prefix: true, value: '50%'},\n        // Set also browser prefixed styles\n        if (isObject(styleValue) && styleValue.prefix === true) {\n            setStyle(element, styleName, styleValue.value);\n        } else {\n            element.style[styleName] = styleValue;\n        }\n    });\n}\n\nfunction capitalize(text) {\n    return text.charAt(0).toUpperCase() + text.slice(1);\n}\n\nfunction isString(obj) {\n    return typeof obj === 'string' || obj instanceof String;\n}\n\nfunction isFunction(obj) {\n    return typeof obj === 'function';\n}\n\nfunction isArray(obj) {\n    return Object.prototype.toString.call(obj) === '[object Array]';\n}\n\n// Returns true if `obj` is object as in {a: 1, b: 2}, not if it's function or\n// array\nfunction isObject(obj) {\n    if (isArray(obj)) {\n        return false;\n    }\n\n    var type = typeof obj;\n    return type === 'object' && !!obj;\n}\n\nfunction forEachObject(object, callback) {\n    for (var key in object) {\n        if (object.hasOwnProperty(key)) {\n            var val = object[key];\n            callback(val, key);\n        }\n    }\n}\n\nfunction floatEquals(a, b) {\n    return Math.abs(a - b) < FLOAT_COMPARISON_EPSILON;\n}\n\n// https://coderwall.com/p/nygghw/don-t-use-innerhtml-to-empty-dom-elements\nfunction removeChildren(el) {\n    while (el.firstChild) {\n        el.removeChild(el.firstChild);\n    }\n}\n\nmodule.exports = {\n    extend: extend,\n    render: render,\n    setStyle: setStyle,\n    setStyles: setStyles,\n    capitalize: capitalize,\n    isString: isString,\n    isFunction: isFunction,\n    isObject: isObject,\n    forEachObject: forEachObject,\n    floatEquals: floatEquals,\n    removeChildren: removeChildren\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9ub2RlX21vZHVsZXMvcHJvZ3Jlc3NiYXIuanMvc3JjL3V0aWxzLmpzPzU4MDciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVXRpbGl0eSBmdW5jdGlvbnNcblxudmFyIFBSRUZJWEVTID0gJ1dlYmtpdCBNb3ogTyBtcycuc3BsaXQoJyAnKTtcbnZhciBGTE9BVF9DT01QQVJJU09OX0VQU0lMT04gPSAwLjAwMTtcblxuLy8gQ29weSBhbGwgYXR0cmlidXRlcyBmcm9tIHNvdXJjZSBvYmplY3QgdG8gZGVzdGluYXRpb24gb2JqZWN0LlxuLy8gZGVzdGluYXRpb24gb2JqZWN0IGlzIG11dGF0ZWQuXG5mdW5jdGlvbiBleHRlbmQoZGVzdGluYXRpb24sIHNvdXJjZSwgcmVjdXJzaXZlKSB7XG4gICAgZGVzdGluYXRpb24gPSBkZXN0aW5hdGlvbiB8fCB7fTtcbiAgICBzb3VyY2UgPSBzb3VyY2UgfHwge307XG4gICAgcmVjdXJzaXZlID0gcmVjdXJzaXZlIHx8IGZhbHNlO1xuXG4gICAgZm9yICh2YXIgYXR0ck5hbWUgaW4gc291cmNlKSB7XG4gICAgICAgIGlmIChzb3VyY2UuaGFzT3duUHJvcGVydHkoYXR0ck5hbWUpKSB7XG4gICAgICAgICAgICB2YXIgZGVzdFZhbCA9IGRlc3RpbmF0aW9uW2F0dHJOYW1lXTtcbiAgICAgICAgICAgIHZhciBzb3VyY2VWYWwgPSBzb3VyY2VbYXR0ck5hbWVdO1xuICAgICAgICAgICAgaWYgKHJlY3Vyc2l2ZSAmJiBpc09iamVjdChkZXN0VmFsKSAmJiBpc09iamVjdChzb3VyY2VWYWwpKSB7XG4gICAgICAgICAgICAgICAgZGVzdGluYXRpb25bYXR0ck5hbWVdID0gZXh0ZW5kKGRlc3RWYWwsIHNvdXJjZVZhbCwgcmVjdXJzaXZlKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgZGVzdGluYXRpb25bYXR0ck5hbWVdID0gc291cmNlVmFsO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGRlc3RpbmF0aW9uO1xufVxuXG4vLyBSZW5kZXJzIHRlbXBsYXRlcyB3aXRoIGdpdmVuIHZhcmlhYmxlcy4gVmFyaWFibGVzIG11c3QgYmUgc3Vycm91bmRlZCB3aXRoXG4vLyBicmFjZXMgd2l0aG91dCBhbnkgc3BhY2VzLCBlLmcuIHt2YXJpYWJsZX1cbi8vIEFsbCBpbnN0YW5jZXMgb2YgdmFyaWFibGUgcGxhY2Vob2xkZXJzIHdpbGwgYmUgcmVwbGFjZWQgd2l0aCBnaXZlbiBjb250ZW50XG4vLyBFeGFtcGxlOlxuLy8gcmVuZGVyKCdIZWxsbywge21lc3NhZ2V9IScsIHttZXNzYWdlOiAnd29ybGQnfSlcbmZ1bmN0aW9uIHJlbmRlcih0ZW1wbGF0ZSwgdmFycykge1xuICAgIHZhciByZW5kZXJlZCA9IHRlbXBsYXRlO1xuXG4gICAgZm9yICh2YXIga2V5IGluIHZhcnMpIHtcbiAgICAgICAgaWYgKHZhcnMuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgICAgICAgdmFyIHZhbCA9IHZhcnNba2V5XTtcbiAgICAgICAgICAgIHZhciByZWdFeHBTdHJpbmcgPSAnXFxcXHsnICsga2V5ICsgJ1xcXFx9JztcbiAgICAgICAgICAgIHZhciByZWdFeHAgPSBuZXcgUmVnRXhwKHJlZ0V4cFN0cmluZywgJ2cnKTtcblxuICAgICAgICAgICAgcmVuZGVyZWQgPSByZW5kZXJlZC5yZXBsYWNlKHJlZ0V4cCwgdmFsKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiByZW5kZXJlZDtcbn1cblxuZnVuY3Rpb24gc2V0U3R5bGUoZWxlbWVudCwgc3R5bGUsIHZhbHVlKSB7XG4gICAgdmFyIGVsU3R5bGUgPSBlbGVtZW50LnN0eWxlOyAgLy8gY2FjaGUgZm9yIHBlcmZvcm1hbmNlXG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IFBSRUZJWEVTLmxlbmd0aDsgKytpKSB7XG4gICAgICAgIHZhciBwcmVmaXggPSBQUkVGSVhFU1tpXTtcbiAgICAgICAgZWxTdHlsZVtwcmVmaXggKyBjYXBpdGFsaXplKHN0eWxlKV0gPSB2YWx1ZTtcbiAgICB9XG5cbiAgICBlbFN0eWxlW3N0eWxlXSA9IHZhbHVlO1xufVxuXG5mdW5jdGlvbiBzZXRTdHlsZXMoZWxlbWVudCwgc3R5bGVzKSB7XG4gICAgZm9yRWFjaE9iamVjdChzdHlsZXMsIGZ1bmN0aW9uKHN0eWxlVmFsdWUsIHN0eWxlTmFtZSkge1xuICAgICAgICAvLyBBbGxvdyBkaXNhYmxpbmcgc29tZSBpbmRpdmlkdWFsIHN0eWxlcyBieSBzZXR0aW5nIHRoZW1cbiAgICAgICAgLy8gdG8gbnVsbCBvciB1bmRlZmluZWRcbiAgICAgICAgaWYgKHN0eWxlVmFsdWUgPT09IG51bGwgfHwgc3R5bGVWYWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICAvLyBJZiBzdHlsZSdzIHZhbHVlIGlzIHtwcmVmaXg6IHRydWUsIHZhbHVlOiAnNTAlJ30sXG4gICAgICAgIC8vIFNldCBhbHNvIGJyb3dzZXIgcHJlZml4ZWQgc3R5bGVzXG4gICAgICAgIGlmIChpc09iamVjdChzdHlsZVZhbHVlKSAmJiBzdHlsZVZhbHVlLnByZWZpeCA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgc2V0U3R5bGUoZWxlbWVudCwgc3R5bGVOYW1lLCBzdHlsZVZhbHVlLnZhbHVlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGVsZW1lbnQuc3R5bGVbc3R5bGVOYW1lXSA9IHN0eWxlVmFsdWU7XG4gICAgICAgIH1cbiAgICB9KTtcbn1cblxuZnVuY3Rpb24gY2FwaXRhbGl6ZSh0ZXh0KSB7XG4gICAgcmV0dXJuIHRleHQuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyB0ZXh0LnNsaWNlKDEpO1xufVxuXG5mdW5jdGlvbiBpc1N0cmluZyhvYmopIHtcbiAgICByZXR1cm4gdHlwZW9mIG9iaiA9PT0gJ3N0cmluZycgfHwgb2JqIGluc3RhbmNlb2YgU3RyaW5nO1xufVxuXG5mdW5jdGlvbiBpc0Z1bmN0aW9uKG9iaikge1xuICAgIHJldHVybiB0eXBlb2Ygb2JqID09PSAnZnVuY3Rpb24nO1xufVxuXG5mdW5jdGlvbiBpc0FycmF5KG9iaikge1xuICAgIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwob2JqKSA9PT0gJ1tvYmplY3QgQXJyYXldJztcbn1cblxuLy8gUmV0dXJucyB0cnVlIGlmIGBvYmpgIGlzIG9iamVjdCBhcyBpbiB7YTogMSwgYjogMn0sIG5vdCBpZiBpdCdzIGZ1bmN0aW9uIG9yXG4vLyBhcnJheVxuZnVuY3Rpb24gaXNPYmplY3Qob2JqKSB7XG4gICAgaWYgKGlzQXJyYXkob2JqKSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgdmFyIHR5cGUgPSB0eXBlb2Ygb2JqO1xuICAgIHJldHVybiB0eXBlID09PSAnb2JqZWN0JyAmJiAhIW9iajtcbn1cblxuZnVuY3Rpb24gZm9yRWFjaE9iamVjdChvYmplY3QsIGNhbGxiYWNrKSB7XG4gICAgZm9yICh2YXIga2V5IGluIG9iamVjdCkge1xuICAgICAgICBpZiAob2JqZWN0Lmhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgICAgICAgIHZhciB2YWwgPSBvYmplY3Rba2V5XTtcbiAgICAgICAgICAgIGNhbGxiYWNrKHZhbCwga2V5KTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuZnVuY3Rpb24gZmxvYXRFcXVhbHMoYSwgYikge1xuICAgIHJldHVybiBNYXRoLmFicyhhIC0gYikgPCBGTE9BVF9DT01QQVJJU09OX0VQU0lMT047XG59XG5cbi8vIGh0dHBzOi8vY29kZXJ3YWxsLmNvbS9wL255Z2dody9kb24tdC11c2UtaW5uZXJodG1sLXRvLWVtcHR5LWRvbS1lbGVtZW50c1xuZnVuY3Rpb24gcmVtb3ZlQ2hpbGRyZW4oZWwpIHtcbiAgICB3aGlsZSAoZWwuZmlyc3RDaGlsZCkge1xuICAgICAgICBlbC5yZW1vdmVDaGlsZChlbC5maXJzdENoaWxkKTtcbiAgICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIGV4dGVuZDogZXh0ZW5kLFxuICAgIHJlbmRlcjogcmVuZGVyLFxuICAgIHNldFN0eWxlOiBzZXRTdHlsZSxcbiAgICBzZXRTdHlsZXM6IHNldFN0eWxlcyxcbiAgICBjYXBpdGFsaXplOiBjYXBpdGFsaXplLFxuICAgIGlzU3RyaW5nOiBpc1N0cmluZyxcbiAgICBpc0Z1bmN0aW9uOiBpc0Z1bmN0aW9uLFxuICAgIGlzT2JqZWN0OiBpc09iamVjdCxcbiAgICBmb3JFYWNoT2JqZWN0OiBmb3JFYWNoT2JqZWN0LFxuICAgIGZsb2F0RXF1YWxzOiBmbG9hdEVxdWFscyxcbiAgICByZW1vdmVDaGlsZHJlbjogcmVtb3ZlQ2hpbGRyZW5cbn07XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gbm9kZV9tb2R1bGVzL3Byb2dyZXNzYmFyLmpzL3NyYy91dGlscy5qcyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

eval("// Base object for different progress bar shapes\n\nvar Path = __webpack_require__(3);\nvar utils = __webpack_require__(0);\n\nvar DESTROYED_ERROR = 'Object is destroyed';\n\nvar Shape = function Shape(container, opts) {\n    // Throw a better error if progress bars are not initialized with `new`\n    // keyword\n    if (!(this instanceof Shape)) {\n        throw new Error('Constructor was called without new keyword');\n    }\n\n    // Prevent calling constructor without parameters so inheritance\n    // works correctly. To understand, this is how Shape is inherited:\n    //\n    //   Line.prototype = new Shape();\n    //\n    // We just want to set the prototype for Line.\n    if (arguments.length === 0) {\n        return;\n    }\n\n    // Default parameters for progress bar creation\n    this._opts = utils.extend({\n        color: '#555',\n        strokeWidth: 1.0,\n        trailColor: null,\n        trailWidth: null,\n        fill: null,\n        text: {\n            style: {\n                color: null,\n                position: 'absolute',\n                left: '50%',\n                top: '50%',\n                padding: 0,\n                margin: 0,\n                transform: {\n                    prefix: true,\n                    value: 'translate(-50%, -50%)'\n                }\n            },\n            autoStyleContainer: true,\n            alignToBottom: true,\n            value: null,\n            className: 'progressbar-text'\n        },\n        svgStyle: {\n            display: 'block',\n            width: '100%'\n        },\n        warnings: false\n    }, opts, true);  // Use recursive extend\n\n    // If user specifies e.g. svgStyle or text style, the whole object\n    // should replace the defaults to make working with styles easier\n    if (utils.isObject(opts) && opts.svgStyle !== undefined) {\n        this._opts.svgStyle = opts.svgStyle;\n    }\n    if (utils.isObject(opts) && utils.isObject(opts.text) && opts.text.style !== undefined) {\n        this._opts.text.style = opts.text.style;\n    }\n\n    var svgView = this._createSvgView(this._opts);\n\n    var element;\n    if (utils.isString(container)) {\n        element = document.querySelector(container);\n    } else {\n        element = container;\n    }\n\n    if (!element) {\n        throw new Error('Container does not exist: ' + container);\n    }\n\n    this._container = element;\n    this._container.appendChild(svgView.svg);\n    if (this._opts.warnings) {\n        this._warnContainerAspectRatio(this._container);\n    }\n\n    if (this._opts.svgStyle) {\n        utils.setStyles(svgView.svg, this._opts.svgStyle);\n    }\n\n    // Expose public attributes before Path initialization\n    this.svg = svgView.svg;\n    this.path = svgView.path;\n    this.trail = svgView.trail;\n    this.text = null;\n\n    var newOpts = utils.extend({\n        attachment: undefined,\n        shape: this\n    }, this._opts);\n    this._progressPath = new Path(svgView.path, newOpts);\n\n    if (utils.isObject(this._opts.text) && this._opts.text.value !== null) {\n        this.setText(this._opts.text.value);\n    }\n};\n\nShape.prototype.animate = function animate(progress, opts, cb) {\n    if (this._progressPath === null) {\n        throw new Error(DESTROYED_ERROR);\n    }\n\n    this._progressPath.animate(progress, opts, cb);\n};\n\nShape.prototype.stop = function stop() {\n    if (this._progressPath === null) {\n        throw new Error(DESTROYED_ERROR);\n    }\n\n    // Don't crash if stop is called inside step function\n    if (this._progressPath === undefined) {\n        return;\n    }\n\n    this._progressPath.stop();\n};\n\nShape.prototype.destroy = function destroy() {\n    if (this._progressPath === null) {\n        throw new Error(DESTROYED_ERROR);\n    }\n\n    this.stop();\n    this.svg.parentNode.removeChild(this.svg);\n    this.svg = null;\n    this.path = null;\n    this.trail = null;\n    this._progressPath = null;\n\n    if (this.text !== null) {\n        this.text.parentNode.removeChild(this.text);\n        this.text = null;\n    }\n};\n\nShape.prototype.set = function set(progress) {\n    if (this._progressPath === null) {\n        throw new Error(DESTROYED_ERROR);\n    }\n\n    this._progressPath.set(progress);\n};\n\nShape.prototype.value = function value() {\n    if (this._progressPath === null) {\n        throw new Error(DESTROYED_ERROR);\n    }\n\n    if (this._progressPath === undefined) {\n        return 0;\n    }\n\n    return this._progressPath.value();\n};\n\nShape.prototype.setText = function setText(newText) {\n    if (this._progressPath === null) {\n        throw new Error(DESTROYED_ERROR);\n    }\n\n    if (this.text === null) {\n        // Create new text node\n        this.text = this._createTextContainer(this._opts, this._container);\n        this._container.appendChild(this.text);\n    }\n\n    // Remove previous text and add new\n    if (utils.isObject(newText)) {\n        utils.removeChildren(this.text);\n        this.text.appendChild(newText);\n    } else {\n        this.text.innerHTML = newText;\n    }\n};\n\nShape.prototype._createSvgView = function _createSvgView(opts) {\n    var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    this._initializeSvg(svg, opts);\n\n    var trailPath = null;\n    // Each option listed in the if condition are 'triggers' for creating\n    // the trail path\n    if (opts.trailColor || opts.trailWidth) {\n        trailPath = this._createTrail(opts);\n        svg.appendChild(trailPath);\n    }\n\n    var path = this._createPath(opts);\n    svg.appendChild(path);\n\n    return {\n        svg: svg,\n        path: path,\n        trail: trailPath\n    };\n};\n\nShape.prototype._initializeSvg = function _initializeSvg(svg, opts) {\n    svg.setAttribute('viewBox', '0 0 100 100');\n};\n\nShape.prototype._createPath = function _createPath(opts) {\n    var pathString = this._pathString(opts);\n    return this._createPathElement(pathString, opts);\n};\n\nShape.prototype._createTrail = function _createTrail(opts) {\n    // Create path string with original passed options\n    var pathString = this._trailString(opts);\n\n    // Prevent modifying original\n    var newOpts = utils.extend({}, opts);\n\n    // Defaults for parameters which modify trail path\n    if (!newOpts.trailColor) {\n        newOpts.trailColor = '#eee';\n    }\n    if (!newOpts.trailWidth) {\n        newOpts.trailWidth = newOpts.strokeWidth;\n    }\n\n    newOpts.color = newOpts.trailColor;\n    newOpts.strokeWidth = newOpts.trailWidth;\n\n    // When trail path is set, fill must be set for it instead of the\n    // actual path to prevent trail stroke from clipping\n    newOpts.fill = null;\n\n    return this._createPathElement(pathString, newOpts);\n};\n\nShape.prototype._createPathElement = function _createPathElement(pathString, opts) {\n    var path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttribute('d', pathString);\n    path.setAttribute('stroke', opts.color);\n    path.setAttribute('stroke-width', opts.strokeWidth);\n\n    if (opts.fill) {\n        path.setAttribute('fill', opts.fill);\n    } else {\n        path.setAttribute('fill-opacity', '0');\n    }\n\n    return path;\n};\n\nShape.prototype._createTextContainer = function _createTextContainer(opts, container) {\n    var textContainer = document.createElement('div');\n    textContainer.className = opts.text.className;\n\n    var textStyle = opts.text.style;\n    if (textStyle) {\n        if (opts.text.autoStyleContainer) {\n            container.style.position = 'relative';\n        }\n\n        utils.setStyles(textContainer, textStyle);\n        // Default text color to progress bar's color\n        if (!textStyle.color) {\n            textContainer.style.color = opts.color;\n        }\n    }\n\n    this._initializeTextContainer(opts, container, textContainer);\n    return textContainer;\n};\n\n// Give custom shapes possibility to modify text element\nShape.prototype._initializeTextContainer = function(opts, container, element) {\n    // By default, no-op\n    // Custom shapes should respect API options, such as text.style\n};\n\nShape.prototype._pathString = function _pathString(opts) {\n    throw new Error('Override this function for each progress bar');\n};\n\nShape.prototype._trailString = function _trailString(opts) {\n    throw new Error('Override this function for each progress bar');\n};\n\nShape.prototype._warnContainerAspectRatio = function _warnContainerAspectRatio(container) {\n    if (!this.containerAspectRatio) {\n        return;\n    }\n\n    var computedStyle = window.getComputedStyle(container, null);\n    var width = parseFloat(computedStyle.getPropertyValue('width'), 10);\n    var height = parseFloat(computedStyle.getPropertyValue('height'), 10);\n    if (!utils.floatEquals(this.containerAspectRatio, width / height)) {\n        console.warn(\n            'Incorrect aspect ratio of container',\n            '#' + container.id,\n            'detected:',\n            computedStyle.getPropertyValue('width') + '(width)',\n            '/',\n            computedStyle.getPropertyValue('height') + '(height)',\n            '=',\n            width / height\n        );\n\n        console.warn(\n            'Aspect ratio of should be',\n            this.containerAspectRatio\n        );\n    }\n};\n\nmodule.exports = Shape;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9ub2RlX21vZHVsZXMvcHJvZ3Jlc3NiYXIuanMvc3JjL3NoYXBlLmpzP2VjYjUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQmFzZSBvYmplY3QgZm9yIGRpZmZlcmVudCBwcm9ncmVzcyBiYXIgc2hhcGVzXG5cbnZhciBQYXRoID0gcmVxdWlyZSgnLi9wYXRoJyk7XG52YXIgdXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzJyk7XG5cbnZhciBERVNUUk9ZRURfRVJST1IgPSAnT2JqZWN0IGlzIGRlc3Ryb3llZCc7XG5cbnZhciBTaGFwZSA9IGZ1bmN0aW9uIFNoYXBlKGNvbnRhaW5lciwgb3B0cykge1xuICAgIC8vIFRocm93IGEgYmV0dGVyIGVycm9yIGlmIHByb2dyZXNzIGJhcnMgYXJlIG5vdCBpbml0aWFsaXplZCB3aXRoIGBuZXdgXG4gICAgLy8ga2V5d29yZFxuICAgIGlmICghKHRoaXMgaW5zdGFuY2VvZiBTaGFwZSkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDb25zdHJ1Y3RvciB3YXMgY2FsbGVkIHdpdGhvdXQgbmV3IGtleXdvcmQnKTtcbiAgICB9XG5cbiAgICAvLyBQcmV2ZW50IGNhbGxpbmcgY29uc3RydWN0b3Igd2l0aG91dCBwYXJhbWV0ZXJzIHNvIGluaGVyaXRhbmNlXG4gICAgLy8gd29ya3MgY29ycmVjdGx5LiBUbyB1bmRlcnN0YW5kLCB0aGlzIGlzIGhvdyBTaGFwZSBpcyBpbmhlcml0ZWQ6XG4gICAgLy9cbiAgICAvLyAgIExpbmUucHJvdG90eXBlID0gbmV3IFNoYXBlKCk7XG4gICAgLy9cbiAgICAvLyBXZSBqdXN0IHdhbnQgdG8gc2V0IHRoZSBwcm90b3R5cGUgZm9yIExpbmUuXG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIERlZmF1bHQgcGFyYW1ldGVycyBmb3IgcHJvZ3Jlc3MgYmFyIGNyZWF0aW9uXG4gICAgdGhpcy5fb3B0cyA9IHV0aWxzLmV4dGVuZCh7XG4gICAgICAgIGNvbG9yOiAnIzU1NScsXG4gICAgICAgIHN0cm9rZVdpZHRoOiAxLjAsXG4gICAgICAgIHRyYWlsQ29sb3I6IG51bGwsXG4gICAgICAgIHRyYWlsV2lkdGg6IG51bGwsXG4gICAgICAgIGZpbGw6IG51bGwsXG4gICAgICAgIHRleHQ6IHtcbiAgICAgICAgICAgIHN0eWxlOiB7XG4gICAgICAgICAgICAgICAgY29sb3I6IG51bGwsXG4gICAgICAgICAgICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgICAgICAgICAgICAgbGVmdDogJzUwJScsXG4gICAgICAgICAgICAgICAgdG9wOiAnNTAlJyxcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAwLFxuICAgICAgICAgICAgICAgIG1hcmdpbjogMCxcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHtcbiAgICAgICAgICAgICAgICAgICAgcHJlZml4OiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogJ3RyYW5zbGF0ZSgtNTAlLCAtNTAlKSdcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgYXV0b1N0eWxlQ29udGFpbmVyOiB0cnVlLFxuICAgICAgICAgICAgYWxpZ25Ub0JvdHRvbTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBudWxsLFxuICAgICAgICAgICAgY2xhc3NOYW1lOiAncHJvZ3Jlc3NiYXItdGV4dCdcbiAgICAgICAgfSxcbiAgICAgICAgc3ZnU3R5bGU6IHtcbiAgICAgICAgICAgIGRpc3BsYXk6ICdibG9jaycsXG4gICAgICAgICAgICB3aWR0aDogJzEwMCUnXG4gICAgICAgIH0sXG4gICAgICAgIHdhcm5pbmdzOiBmYWxzZVxuICAgIH0sIG9wdHMsIHRydWUpOyAgLy8gVXNlIHJlY3Vyc2l2ZSBleHRlbmRcblxuICAgIC8vIElmIHVzZXIgc3BlY2lmaWVzIGUuZy4gc3ZnU3R5bGUgb3IgdGV4dCBzdHlsZSwgdGhlIHdob2xlIG9iamVjdFxuICAgIC8vIHNob3VsZCByZXBsYWNlIHRoZSBkZWZhdWx0cyB0byBtYWtlIHdvcmtpbmcgd2l0aCBzdHlsZXMgZWFzaWVyXG4gICAgaWYgKHV0aWxzLmlzT2JqZWN0KG9wdHMpICYmIG9wdHMuc3ZnU3R5bGUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICB0aGlzLl9vcHRzLnN2Z1N0eWxlID0gb3B0cy5zdmdTdHlsZTtcbiAgICB9XG4gICAgaWYgKHV0aWxzLmlzT2JqZWN0KG9wdHMpICYmIHV0aWxzLmlzT2JqZWN0KG9wdHMudGV4dCkgJiYgb3B0cy50ZXh0LnN0eWxlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgdGhpcy5fb3B0cy50ZXh0LnN0eWxlID0gb3B0cy50ZXh0LnN0eWxlO1xuICAgIH1cblxuICAgIHZhciBzdmdWaWV3ID0gdGhpcy5fY3JlYXRlU3ZnVmlldyh0aGlzLl9vcHRzKTtcblxuICAgIHZhciBlbGVtZW50O1xuICAgIGlmICh1dGlscy5pc1N0cmluZyhjb250YWluZXIpKSB7XG4gICAgICAgIGVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNvbnRhaW5lcik7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgZWxlbWVudCA9IGNvbnRhaW5lcjtcbiAgICB9XG5cbiAgICBpZiAoIWVsZW1lbnQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDb250YWluZXIgZG9lcyBub3QgZXhpc3Q6ICcgKyBjb250YWluZXIpO1xuICAgIH1cblxuICAgIHRoaXMuX2NvbnRhaW5lciA9IGVsZW1lbnQ7XG4gICAgdGhpcy5fY29udGFpbmVyLmFwcGVuZENoaWxkKHN2Z1ZpZXcuc3ZnKTtcbiAgICBpZiAodGhpcy5fb3B0cy53YXJuaW5ncykge1xuICAgICAgICB0aGlzLl93YXJuQ29udGFpbmVyQXNwZWN0UmF0aW8odGhpcy5fY29udGFpbmVyKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5fb3B0cy5zdmdTdHlsZSkge1xuICAgICAgICB1dGlscy5zZXRTdHlsZXMoc3ZnVmlldy5zdmcsIHRoaXMuX29wdHMuc3ZnU3R5bGUpO1xuICAgIH1cblxuICAgIC8vIEV4cG9zZSBwdWJsaWMgYXR0cmlidXRlcyBiZWZvcmUgUGF0aCBpbml0aWFsaXphdGlvblxuICAgIHRoaXMuc3ZnID0gc3ZnVmlldy5zdmc7XG4gICAgdGhpcy5wYXRoID0gc3ZnVmlldy5wYXRoO1xuICAgIHRoaXMudHJhaWwgPSBzdmdWaWV3LnRyYWlsO1xuICAgIHRoaXMudGV4dCA9IG51bGw7XG5cbiAgICB2YXIgbmV3T3B0cyA9IHV0aWxzLmV4dGVuZCh7XG4gICAgICAgIGF0dGFjaG1lbnQ6IHVuZGVmaW5lZCxcbiAgICAgICAgc2hhcGU6IHRoaXNcbiAgICB9LCB0aGlzLl9vcHRzKTtcbiAgICB0aGlzLl9wcm9ncmVzc1BhdGggPSBuZXcgUGF0aChzdmdWaWV3LnBhdGgsIG5ld09wdHMpO1xuXG4gICAgaWYgKHV0aWxzLmlzT2JqZWN0KHRoaXMuX29wdHMudGV4dCkgJiYgdGhpcy5fb3B0cy50ZXh0LnZhbHVlICE9PSBudWxsKSB7XG4gICAgICAgIHRoaXMuc2V0VGV4dCh0aGlzLl9vcHRzLnRleHQudmFsdWUpO1xuICAgIH1cbn07XG5cblNoYXBlLnByb3RvdHlwZS5hbmltYXRlID0gZnVuY3Rpb24gYW5pbWF0ZShwcm9ncmVzcywgb3B0cywgY2IpIHtcbiAgICBpZiAodGhpcy5fcHJvZ3Jlc3NQYXRoID09PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihERVNUUk9ZRURfRVJST1IpO1xuICAgIH1cblxuICAgIHRoaXMuX3Byb2dyZXNzUGF0aC5hbmltYXRlKHByb2dyZXNzLCBvcHRzLCBjYik7XG59O1xuXG5TaGFwZS5wcm90b3R5cGUuc3RvcCA9IGZ1bmN0aW9uIHN0b3AoKSB7XG4gICAgaWYgKHRoaXMuX3Byb2dyZXNzUGF0aCA9PT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoREVTVFJPWUVEX0VSUk9SKTtcbiAgICB9XG5cbiAgICAvLyBEb24ndCBjcmFzaCBpZiBzdG9wIGlzIGNhbGxlZCBpbnNpZGUgc3RlcCBmdW5jdGlvblxuICAgIGlmICh0aGlzLl9wcm9ncmVzc1BhdGggPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy5fcHJvZ3Jlc3NQYXRoLnN0b3AoKTtcbn07XG5cblNoYXBlLnByb3RvdHlwZS5kZXN0cm95ID0gZnVuY3Rpb24gZGVzdHJveSgpIHtcbiAgICBpZiAodGhpcy5fcHJvZ3Jlc3NQYXRoID09PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihERVNUUk9ZRURfRVJST1IpO1xuICAgIH1cblxuICAgIHRoaXMuc3RvcCgpO1xuICAgIHRoaXMuc3ZnLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGhpcy5zdmcpO1xuICAgIHRoaXMuc3ZnID0gbnVsbDtcbiAgICB0aGlzLnBhdGggPSBudWxsO1xuICAgIHRoaXMudHJhaWwgPSBudWxsO1xuICAgIHRoaXMuX3Byb2dyZXNzUGF0aCA9IG51bGw7XG5cbiAgICBpZiAodGhpcy50ZXh0ICE9PSBudWxsKSB7XG4gICAgICAgIHRoaXMudGV4dC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHRoaXMudGV4dCk7XG4gICAgICAgIHRoaXMudGV4dCA9IG51bGw7XG4gICAgfVxufTtcblxuU2hhcGUucHJvdG90eXBlLnNldCA9IGZ1bmN0aW9uIHNldChwcm9ncmVzcykge1xuICAgIGlmICh0aGlzLl9wcm9ncmVzc1BhdGggPT09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKERFU1RST1lFRF9FUlJPUik7XG4gICAgfVxuXG4gICAgdGhpcy5fcHJvZ3Jlc3NQYXRoLnNldChwcm9ncmVzcyk7XG59O1xuXG5TaGFwZS5wcm90b3R5cGUudmFsdWUgPSBmdW5jdGlvbiB2YWx1ZSgpIHtcbiAgICBpZiAodGhpcy5fcHJvZ3Jlc3NQYXRoID09PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihERVNUUk9ZRURfRVJST1IpO1xuICAgIH1cblxuICAgIGlmICh0aGlzLl9wcm9ncmVzc1BhdGggPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gMDtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy5fcHJvZ3Jlc3NQYXRoLnZhbHVlKCk7XG59O1xuXG5TaGFwZS5wcm90b3R5cGUuc2V0VGV4dCA9IGZ1bmN0aW9uIHNldFRleHQobmV3VGV4dCkge1xuICAgIGlmICh0aGlzLl9wcm9ncmVzc1BhdGggPT09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKERFU1RST1lFRF9FUlJPUik7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMudGV4dCA9PT0gbnVsbCkge1xuICAgICAgICAvLyBDcmVhdGUgbmV3IHRleHQgbm9kZVxuICAgICAgICB0aGlzLnRleHQgPSB0aGlzLl9jcmVhdGVUZXh0Q29udGFpbmVyKHRoaXMuX29wdHMsIHRoaXMuX2NvbnRhaW5lcik7XG4gICAgICAgIHRoaXMuX2NvbnRhaW5lci5hcHBlbmRDaGlsZCh0aGlzLnRleHQpO1xuICAgIH1cblxuICAgIC8vIFJlbW92ZSBwcmV2aW91cyB0ZXh0IGFuZCBhZGQgbmV3XG4gICAgaWYgKHV0aWxzLmlzT2JqZWN0KG5ld1RleHQpKSB7XG4gICAgICAgIHV0aWxzLnJlbW92ZUNoaWxkcmVuKHRoaXMudGV4dCk7XG4gICAgICAgIHRoaXMudGV4dC5hcHBlbmRDaGlsZChuZXdUZXh0KTtcbiAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLnRleHQuaW5uZXJIVE1MID0gbmV3VGV4dDtcbiAgICB9XG59O1xuXG5TaGFwZS5wcm90b3R5cGUuX2NyZWF0ZVN2Z1ZpZXcgPSBmdW5jdGlvbiBfY3JlYXRlU3ZnVmlldyhvcHRzKSB7XG4gICAgdmFyIHN2ZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUygnaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnLCAnc3ZnJyk7XG4gICAgdGhpcy5faW5pdGlhbGl6ZVN2ZyhzdmcsIG9wdHMpO1xuXG4gICAgdmFyIHRyYWlsUGF0aCA9IG51bGw7XG4gICAgLy8gRWFjaCBvcHRpb24gbGlzdGVkIGluIHRoZSBpZiBjb25kaXRpb24gYXJlICd0cmlnZ2VycycgZm9yIGNyZWF0aW5nXG4gICAgLy8gdGhlIHRyYWlsIHBhdGhcbiAgICBpZiAob3B0cy50cmFpbENvbG9yIHx8IG9wdHMudHJhaWxXaWR0aCkge1xuICAgICAgICB0cmFpbFBhdGggPSB0aGlzLl9jcmVhdGVUcmFpbChvcHRzKTtcbiAgICAgICAgc3ZnLmFwcGVuZENoaWxkKHRyYWlsUGF0aCk7XG4gICAgfVxuXG4gICAgdmFyIHBhdGggPSB0aGlzLl9jcmVhdGVQYXRoKG9wdHMpO1xuICAgIHN2Zy5hcHBlbmRDaGlsZChwYXRoKTtcblxuICAgIHJldHVybiB7XG4gICAgICAgIHN2Zzogc3ZnLFxuICAgICAgICBwYXRoOiBwYXRoLFxuICAgICAgICB0cmFpbDogdHJhaWxQYXRoXG4gICAgfTtcbn07XG5cblNoYXBlLnByb3RvdHlwZS5faW5pdGlhbGl6ZVN2ZyA9IGZ1bmN0aW9uIF9pbml0aWFsaXplU3ZnKHN2Zywgb3B0cykge1xuICAgIHN2Zy5zZXRBdHRyaWJ1dGUoJ3ZpZXdCb3gnLCAnMCAwIDEwMCAxMDAnKTtcbn07XG5cblNoYXBlLnByb3RvdHlwZS5fY3JlYXRlUGF0aCA9IGZ1bmN0aW9uIF9jcmVhdGVQYXRoKG9wdHMpIHtcbiAgICB2YXIgcGF0aFN0cmluZyA9IHRoaXMuX3BhdGhTdHJpbmcob3B0cyk7XG4gICAgcmV0dXJuIHRoaXMuX2NyZWF0ZVBhdGhFbGVtZW50KHBhdGhTdHJpbmcsIG9wdHMpO1xufTtcblxuU2hhcGUucHJvdG90eXBlLl9jcmVhdGVUcmFpbCA9IGZ1bmN0aW9uIF9jcmVhdGVUcmFpbChvcHRzKSB7XG4gICAgLy8gQ3JlYXRlIHBhdGggc3RyaW5nIHdpdGggb3JpZ2luYWwgcGFzc2VkIG9wdGlvbnNcbiAgICB2YXIgcGF0aFN0cmluZyA9IHRoaXMuX3RyYWlsU3RyaW5nKG9wdHMpO1xuXG4gICAgLy8gUHJldmVudCBtb2RpZnlpbmcgb3JpZ2luYWxcbiAgICB2YXIgbmV3T3B0cyA9IHV0aWxzLmV4dGVuZCh7fSwgb3B0cyk7XG5cbiAgICAvLyBEZWZhdWx0cyBmb3IgcGFyYW1ldGVycyB3aGljaCBtb2RpZnkgdHJhaWwgcGF0aFxuICAgIGlmICghbmV3T3B0cy50cmFpbENvbG9yKSB7XG4gICAgICAgIG5ld09wdHMudHJhaWxDb2xvciA9ICcjZWVlJztcbiAgICB9XG4gICAgaWYgKCFuZXdPcHRzLnRyYWlsV2lkdGgpIHtcbiAgICAgICAgbmV3T3B0cy50cmFpbFdpZHRoID0gbmV3T3B0cy5zdHJva2VXaWR0aDtcbiAgICB9XG5cbiAgICBuZXdPcHRzLmNvbG9yID0gbmV3T3B0cy50cmFpbENvbG9yO1xuICAgIG5ld09wdHMuc3Ryb2tlV2lkdGggPSBuZXdPcHRzLnRyYWlsV2lkdGg7XG5cbiAgICAvLyBXaGVuIHRyYWlsIHBhdGggaXMgc2V0LCBmaWxsIG11c3QgYmUgc2V0IGZvciBpdCBpbnN0ZWFkIG9mIHRoZVxuICAgIC8vIGFjdHVhbCBwYXRoIHRvIHByZXZlbnQgdHJhaWwgc3Ryb2tlIGZyb20gY2xpcHBpbmdcbiAgICBuZXdPcHRzLmZpbGwgPSBudWxsO1xuXG4gICAgcmV0dXJuIHRoaXMuX2NyZWF0ZVBhdGhFbGVtZW50KHBhdGhTdHJpbmcsIG5ld09wdHMpO1xufTtcblxuU2hhcGUucHJvdG90eXBlLl9jcmVhdGVQYXRoRWxlbWVudCA9IGZ1bmN0aW9uIF9jcmVhdGVQYXRoRWxlbWVudChwYXRoU3RyaW5nLCBvcHRzKSB7XG4gICAgdmFyIHBhdGggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoJ2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJywgJ3BhdGgnKTtcbiAgICBwYXRoLnNldEF0dHJpYnV0ZSgnZCcsIHBhdGhTdHJpbmcpO1xuICAgIHBhdGguc2V0QXR0cmlidXRlKCdzdHJva2UnLCBvcHRzLmNvbG9yKTtcbiAgICBwYXRoLnNldEF0dHJpYnV0ZSgnc3Ryb2tlLXdpZHRoJywgb3B0cy5zdHJva2VXaWR0aCk7XG5cbiAgICBpZiAob3B0cy5maWxsKSB7XG4gICAgICAgIHBhdGguc2V0QXR0cmlidXRlKCdmaWxsJywgb3B0cy5maWxsKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBwYXRoLnNldEF0dHJpYnV0ZSgnZmlsbC1vcGFjaXR5JywgJzAnKTtcbiAgICB9XG5cbiAgICByZXR1cm4gcGF0aDtcbn07XG5cblNoYXBlLnByb3RvdHlwZS5fY3JlYXRlVGV4dENvbnRhaW5lciA9IGZ1bmN0aW9uIF9jcmVhdGVUZXh0Q29udGFpbmVyKG9wdHMsIGNvbnRhaW5lcikge1xuICAgIHZhciB0ZXh0Q29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgdGV4dENvbnRhaW5lci5jbGFzc05hbWUgPSBvcHRzLnRleHQuY2xhc3NOYW1lO1xuXG4gICAgdmFyIHRleHRTdHlsZSA9IG9wdHMudGV4dC5zdHlsZTtcbiAgICBpZiAodGV4dFN0eWxlKSB7XG4gICAgICAgIGlmIChvcHRzLnRleHQuYXV0b1N0eWxlQ29udGFpbmVyKSB7XG4gICAgICAgICAgICBjb250YWluZXIuc3R5bGUucG9zaXRpb24gPSAncmVsYXRpdmUnO1xuICAgICAgICB9XG5cbiAgICAgICAgdXRpbHMuc2V0U3R5bGVzKHRleHRDb250YWluZXIsIHRleHRTdHlsZSk7XG4gICAgICAgIC8vIERlZmF1bHQgdGV4dCBjb2xvciB0byBwcm9ncmVzcyBiYXIncyBjb2xvclxuICAgICAgICBpZiAoIXRleHRTdHlsZS5jb2xvcikge1xuICAgICAgICAgICAgdGV4dENvbnRhaW5lci5zdHlsZS5jb2xvciA9IG9wdHMuY29sb3I7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICB0aGlzLl9pbml0aWFsaXplVGV4dENvbnRhaW5lcihvcHRzLCBjb250YWluZXIsIHRleHRDb250YWluZXIpO1xuICAgIHJldHVybiB0ZXh0Q29udGFpbmVyO1xufTtcblxuLy8gR2l2ZSBjdXN0b20gc2hhcGVzIHBvc3NpYmlsaXR5IHRvIG1vZGlmeSB0ZXh0IGVsZW1lbnRcblNoYXBlLnByb3RvdHlwZS5faW5pdGlhbGl6ZVRleHRDb250YWluZXIgPSBmdW5jdGlvbihvcHRzLCBjb250YWluZXIsIGVsZW1lbnQpIHtcbiAgICAvLyBCeSBkZWZhdWx0LCBuby1vcFxuICAgIC8vIEN1c3RvbSBzaGFwZXMgc2hvdWxkIHJlc3BlY3QgQVBJIG9wdGlvbnMsIHN1Y2ggYXMgdGV4dC5zdHlsZVxufTtcblxuU2hhcGUucHJvdG90eXBlLl9wYXRoU3RyaW5nID0gZnVuY3Rpb24gX3BhdGhTdHJpbmcob3B0cykge1xuICAgIHRocm93IG5ldyBFcnJvcignT3ZlcnJpZGUgdGhpcyBmdW5jdGlvbiBmb3IgZWFjaCBwcm9ncmVzcyBiYXInKTtcbn07XG5cblNoYXBlLnByb3RvdHlwZS5fdHJhaWxTdHJpbmcgPSBmdW5jdGlvbiBfdHJhaWxTdHJpbmcob3B0cykge1xuICAgIHRocm93IG5ldyBFcnJvcignT3ZlcnJpZGUgdGhpcyBmdW5jdGlvbiBmb3IgZWFjaCBwcm9ncmVzcyBiYXInKTtcbn07XG5cblNoYXBlLnByb3RvdHlwZS5fd2FybkNvbnRhaW5lckFzcGVjdFJhdGlvID0gZnVuY3Rpb24gX3dhcm5Db250YWluZXJBc3BlY3RSYXRpbyhjb250YWluZXIpIHtcbiAgICBpZiAoIXRoaXMuY29udGFpbmVyQXNwZWN0UmF0aW8pIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHZhciBjb21wdXRlZFN0eWxlID0gd2luZG93LmdldENvbXB1dGVkU3R5bGUoY29udGFpbmVyLCBudWxsKTtcbiAgICB2YXIgd2lkdGggPSBwYXJzZUZsb2F0KGNvbXB1dGVkU3R5bGUuZ2V0UHJvcGVydHlWYWx1ZSgnd2lkdGgnKSwgMTApO1xuICAgIHZhciBoZWlnaHQgPSBwYXJzZUZsb2F0KGNvbXB1dGVkU3R5bGUuZ2V0UHJvcGVydHlWYWx1ZSgnaGVpZ2h0JyksIDEwKTtcbiAgICBpZiAoIXV0aWxzLmZsb2F0RXF1YWxzKHRoaXMuY29udGFpbmVyQXNwZWN0UmF0aW8sIHdpZHRoIC8gaGVpZ2h0KSkge1xuICAgICAgICBjb25zb2xlLndhcm4oXG4gICAgICAgICAgICAnSW5jb3JyZWN0IGFzcGVjdCByYXRpbyBvZiBjb250YWluZXInLFxuICAgICAgICAgICAgJyMnICsgY29udGFpbmVyLmlkLFxuICAgICAgICAgICAgJ2RldGVjdGVkOicsXG4gICAgICAgICAgICBjb21wdXRlZFN0eWxlLmdldFByb3BlcnR5VmFsdWUoJ3dpZHRoJykgKyAnKHdpZHRoKScsXG4gICAgICAgICAgICAnLycsXG4gICAgICAgICAgICBjb21wdXRlZFN0eWxlLmdldFByb3BlcnR5VmFsdWUoJ2hlaWdodCcpICsgJyhoZWlnaHQpJyxcbiAgICAgICAgICAgICc9JyxcbiAgICAgICAgICAgIHdpZHRoIC8gaGVpZ2h0XG4gICAgICAgICk7XG5cbiAgICAgICAgY29uc29sZS53YXJuKFxuICAgICAgICAgICAgJ0FzcGVjdCByYXRpbyBvZiBzaG91bGQgYmUnLFxuICAgICAgICAgICAgdGhpcy5jb250YWluZXJBc3BlY3RSYXRpb1xuICAgICAgICApO1xuICAgIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gU2hhcGU7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gbm9kZV9tb2R1bGVzL3Byb2dyZXNzYmFyLmpzL3NyYy9zaGFwZS5qcyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7QUFPQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

eval("// Circle shaped progress bar\n\nvar Shape = __webpack_require__(1);\nvar utils = __webpack_require__(0);\n\nvar Circle = function Circle(container, options) {\n    // Use two arcs to form a circle\n    // See this answer http://stackoverflow.com/a/10477334/1446092\n    this._pathTemplate =\n        'M 50,50 m 0,-{radius}' +\n        ' a {radius},{radius} 0 1 1 0,{2radius}' +\n        ' a {radius},{radius} 0 1 1 0,-{2radius}';\n\n    this.containerAspectRatio = 1;\n\n    Shape.apply(this, arguments);\n};\n\nCircle.prototype = new Shape();\nCircle.prototype.constructor = Circle;\n\nCircle.prototype._pathString = function _pathString(opts) {\n    var widthOfWider = opts.strokeWidth;\n    if (opts.trailWidth && opts.trailWidth > opts.strokeWidth) {\n        widthOfWider = opts.trailWidth;\n    }\n\n    var r = 50 - widthOfWider / 2;\n\n    return utils.render(this._pathTemplate, {\n        radius: r,\n        '2radius': r * 2\n    });\n};\n\nCircle.prototype._trailString = function _trailString(opts) {\n    return this._pathString(opts);\n};\n\nmodule.exports = Circle;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9ub2RlX21vZHVsZXMvcHJvZ3Jlc3NiYXIuanMvc3JjL2NpcmNsZS5qcz9hYjg4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIENpcmNsZSBzaGFwZWQgcHJvZ3Jlc3MgYmFyXG5cbnZhciBTaGFwZSA9IHJlcXVpcmUoJy4vc2hhcGUnKTtcbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vdXRpbHMnKTtcblxudmFyIENpcmNsZSA9IGZ1bmN0aW9uIENpcmNsZShjb250YWluZXIsIG9wdGlvbnMpIHtcbiAgICAvLyBVc2UgdHdvIGFyY3MgdG8gZm9ybSBhIGNpcmNsZVxuICAgIC8vIFNlZSB0aGlzIGFuc3dlciBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vYS8xMDQ3NzMzNC8xNDQ2MDkyXG4gICAgdGhpcy5fcGF0aFRlbXBsYXRlID1cbiAgICAgICAgJ00gNTAsNTAgbSAwLC17cmFkaXVzfScgK1xuICAgICAgICAnIGEge3JhZGl1c30se3JhZGl1c30gMCAxIDEgMCx7MnJhZGl1c30nICtcbiAgICAgICAgJyBhIHtyYWRpdXN9LHtyYWRpdXN9IDAgMSAxIDAsLXsycmFkaXVzfSc7XG5cbiAgICB0aGlzLmNvbnRhaW5lckFzcGVjdFJhdGlvID0gMTtcblxuICAgIFNoYXBlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59O1xuXG5DaXJjbGUucHJvdG90eXBlID0gbmV3IFNoYXBlKCk7XG5DaXJjbGUucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gQ2lyY2xlO1xuXG5DaXJjbGUucHJvdG90eXBlLl9wYXRoU3RyaW5nID0gZnVuY3Rpb24gX3BhdGhTdHJpbmcob3B0cykge1xuICAgIHZhciB3aWR0aE9mV2lkZXIgPSBvcHRzLnN0cm9rZVdpZHRoO1xuICAgIGlmIChvcHRzLnRyYWlsV2lkdGggJiYgb3B0cy50cmFpbFdpZHRoID4gb3B0cy5zdHJva2VXaWR0aCkge1xuICAgICAgICB3aWR0aE9mV2lkZXIgPSBvcHRzLnRyYWlsV2lkdGg7XG4gICAgfVxuXG4gICAgdmFyIHIgPSA1MCAtIHdpZHRoT2ZXaWRlciAvIDI7XG5cbiAgICByZXR1cm4gdXRpbHMucmVuZGVyKHRoaXMuX3BhdGhUZW1wbGF0ZSwge1xuICAgICAgICByYWRpdXM6IHIsXG4gICAgICAgICcycmFkaXVzJzogciAqIDJcbiAgICB9KTtcbn07XG5cbkNpcmNsZS5wcm90b3R5cGUuX3RyYWlsU3RyaW5nID0gZnVuY3Rpb24gX3RyYWlsU3RyaW5nKG9wdHMpIHtcbiAgICByZXR1cm4gdGhpcy5fcGF0aFN0cmluZyhvcHRzKTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gQ2lyY2xlO1xuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIG5vZGVfbW9kdWxlcy9wcm9ncmVzc2Jhci5qcy9zcmMvY2lyY2xlLmpzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

eval("// Lower level API to animate any kind of svg path\n\nvar Tweenable = __webpack_require__(8);\nvar utils = __webpack_require__(0);\n\nvar EASING_ALIASES = {\n    easeIn: 'easeInCubic',\n    easeOut: 'easeOutCubic',\n    easeInOut: 'easeInOutCubic'\n};\n\nvar Path = function Path(path, opts) {\n    // Throw a better error if not initialized with `new` keyword\n    if (!(this instanceof Path)) {\n        throw new Error('Constructor was called without new keyword');\n    }\n\n    // Default parameters for animation\n    opts = utils.extend({\n        duration: 800,\n        easing: 'linear',\n        from: {},\n        to: {},\n        step: function() {}\n    }, opts);\n\n    var element;\n    if (utils.isString(path)) {\n        element = document.querySelector(path);\n    } else {\n        element = path;\n    }\n\n    // Reveal .path as public attribute\n    this.path = element;\n    this._opts = opts;\n    this._tweenable = null;\n\n    // Set up the starting positions\n    var length = this.path.getTotalLength();\n    this.path.style.strokeDasharray = length + ' ' + length;\n    this.set(0);\n};\n\nPath.prototype.value = function value() {\n    var offset = this._getComputedDashOffset();\n    var length = this.path.getTotalLength();\n\n    var progress = 1 - offset / length;\n    // Round number to prevent returning very small number like 1e-30, which\n    // is practically 0\n    return parseFloat(progress.toFixed(6), 10);\n};\n\nPath.prototype.set = function set(progress) {\n    this.stop();\n\n    this.path.style.strokeDashoffset = this._progressToOffset(progress);\n\n    var step = this._opts.step;\n    if (utils.isFunction(step)) {\n        var easing = this._easing(this._opts.easing);\n        var values = this._calculateTo(progress, easing);\n        var reference = this._opts.shape || this;\n        step(values, reference, this._opts.attachment);\n    }\n};\n\nPath.prototype.stop = function stop() {\n    this._stopTween();\n    this.path.style.strokeDashoffset = this._getComputedDashOffset();\n};\n\n// Method introduced here:\n// http://jakearchibald.com/2013/animated-line-drawing-svg/\nPath.prototype.animate = function animate(progress, opts, cb) {\n    opts = opts || {};\n\n    if (utils.isFunction(opts)) {\n        cb = opts;\n        opts = {};\n    }\n\n    var passedOpts = utils.extend({}, opts);\n\n    // Copy default opts to new object so defaults are not modified\n    var defaultOpts = utils.extend({}, this._opts);\n    opts = utils.extend(defaultOpts, opts);\n\n    var shiftyEasing = this._easing(opts.easing);\n    var values = this._resolveFromAndTo(progress, shiftyEasing, passedOpts);\n\n    this.stop();\n\n    // Trigger a layout so styles are calculated & the browser\n    // picks up the starting position before animating\n    this.path.getBoundingClientRect();\n\n    var offset = this._getComputedDashOffset();\n    var newOffset = this._progressToOffset(progress);\n\n    var self = this;\n    this._tweenable = new Tweenable();\n    this._tweenable.tween({\n        from: utils.extend({ offset: offset }, values.from),\n        to: utils.extend({ offset: newOffset }, values.to),\n        duration: opts.duration,\n        easing: shiftyEasing,\n        step: function(state) {\n            self.path.style.strokeDashoffset = state.offset;\n            var reference = opts.shape || self;\n            opts.step(state, reference, opts.attachment);\n        },\n        finish: function(state) {\n            if (utils.isFunction(cb)) {\n                cb();\n            }\n        }\n    });\n};\n\nPath.prototype._getComputedDashOffset = function _getComputedDashOffset() {\n    var computedStyle = window.getComputedStyle(this.path, null);\n    return parseFloat(computedStyle.getPropertyValue('stroke-dashoffset'), 10);\n};\n\nPath.prototype._progressToOffset = function _progressToOffset(progress) {\n    var length = this.path.getTotalLength();\n    return length - progress * length;\n};\n\n// Resolves from and to values for animation.\nPath.prototype._resolveFromAndTo = function _resolveFromAndTo(progress, easing, opts) {\n    if (opts.from && opts.to) {\n        return {\n            from: opts.from,\n            to: opts.to\n        };\n    }\n\n    return {\n        from: this._calculateFrom(easing),\n        to: this._calculateTo(progress, easing)\n    };\n};\n\n// Calculate `from` values from options passed at initialization\nPath.prototype._calculateFrom = function _calculateFrom(easing) {\n    return Tweenable.interpolate(this._opts.from, this._opts.to, this.value(), easing);\n};\n\n// Calculate `to` values from options passed at initialization\nPath.prototype._calculateTo = function _calculateTo(progress, easing) {\n    return Tweenable.interpolate(this._opts.from, this._opts.to, progress, easing);\n};\n\nPath.prototype._stopTween = function _stopTween() {\n    if (this._tweenable !== null) {\n        this._tweenable.stop();\n        this._tweenable = null;\n    }\n};\n\nPath.prototype._easing = function _easing(easing) {\n    if (EASING_ALIASES.hasOwnProperty(easing)) {\n        return EASING_ALIASES[easing];\n    }\n\n    return easing;\n};\n\nmodule.exports = Path;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

eval("module.exports = {\n    // Higher level API, different shaped progress bars\n    Line: __webpack_require__(6),\n    Circle: __webpack_require__(2),\n    SemiCircle: __webpack_require__(7),\n\n    // Lower level API to use any SVG path\n    Path: __webpack_require__(3),\n\n    // Base-class for creating new custom shapes\n    // to be in line with the API of built-in shapes\n    // Undocumented.\n    Shape: __webpack_require__(1),\n\n    // Internal utils, undocumented.\n    utils: __webpack_require__(0)\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9ub2RlX21vZHVsZXMvcHJvZ3Jlc3NiYXIuanMvc3JjL21haW4uanM/N2FiMSJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICAvLyBIaWdoZXIgbGV2ZWwgQVBJLCBkaWZmZXJlbnQgc2hhcGVkIHByb2dyZXNzIGJhcnNcbiAgICBMaW5lOiByZXF1aXJlKCcuL2xpbmUnKSxcbiAgICBDaXJjbGU6IHJlcXVpcmUoJy4vY2lyY2xlJyksXG4gICAgU2VtaUNpcmNsZTogcmVxdWlyZSgnLi9zZW1pY2lyY2xlJyksXG5cbiAgICAvLyBMb3dlciBsZXZlbCBBUEkgdG8gdXNlIGFueSBTVkcgcGF0aFxuICAgIFBhdGg6IHJlcXVpcmUoJy4vcGF0aCcpLFxuXG4gICAgLy8gQmFzZS1jbGFzcyBmb3IgY3JlYXRpbmcgbmV3IGN1c3RvbSBzaGFwZXNcbiAgICAvLyB0byBiZSBpbiBsaW5lIHdpdGggdGhlIEFQSSBvZiBidWlsdC1pbiBzaGFwZXNcbiAgICAvLyBVbmRvY3VtZW50ZWQuXG4gICAgU2hhcGU6IHJlcXVpcmUoJy4vc2hhcGUnKSxcblxuICAgIC8vIEludGVybmFsIHV0aWxzLCB1bmRvY3VtZW50ZWQuXG4gICAgdXRpbHM6IHJlcXVpcmUoJy4vdXRpbHMnKVxufTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBub2RlX21vZHVsZXMvcHJvZ3Jlc3NiYXIuanMvc3JjL21haW4uanMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7Ozs7QUFJQTtBQUNBOztBQUVBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 5 */
/***/ function(module, exports) {

"use strict";
eval("\"use strict\";\nvar Plugins = (function () {\n    function Plugins() {\n        this.exposes = {};\n    }\n    Plugins.prototype.install = function () {\n    };\n    return Plugins;\n}());\nexports.Plugins = Plugins;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUGx1Z2lucy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIlBsdWdpbnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0lBQUE7UUFFSSxZQUFPLEdBQUcsRUFBRSxDQUFDO0lBS2pCLENBQUM7SUFIRyx5QkFBTyxHQUFQO0lBQ0EsQ0FBQztJQUVMLGNBQUM7QUFBRCxDQUFDLEFBUEQsSUFPQztBQVBxQixlQUFPLFVBTzVCLENBQUEifQ==//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9yZXNvdXJjZXMvYXNzZXRzL3R5cGVzY3JpcHQvUGx1Z2lucy9QbHVnaW5zLmpzPzNiMjUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgUGx1Z2lucyA9IChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gUGx1Z2lucygpIHtcbiAgICAgICAgdGhpcy5leHBvc2VzID0ge307XG4gICAgfVxuICAgIFBsdWdpbnMucHJvdG90eXBlLmluc3RhbGwgPSBmdW5jdGlvbiAoKSB7XG4gICAgfTtcbiAgICByZXR1cm4gUGx1Z2lucztcbn0oKSk7XG5leHBvcnRzLlBsdWdpbnMgPSBQbHVnaW5zO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pVUd4MVoybHVjeTVxY3lJc0luTnZkWEpqWlZKdmIzUWlPaUlpTENKemIzVnlZMlZ6SWpwYklsQnNkV2RwYm5NdWRITWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklqdEJRVUZCTzBsQlFVRTdVVUZGU1N4WlFVRlBMRWRCUVVjc1JVRkJSU3hEUVVGRE8wbEJTMnBDTEVOQlFVTTdTVUZJUnl4NVFrRkJUeXhIUVVGUU8wbEJRMEVzUTBGQlF6dEpRVVZNTEdOQlFVTTdRVUZCUkN4RFFVRkRMRUZCVUVRc1NVRlBRenRCUVZCeFFpeGxRVUZQTEZWQlR6VkNMRU5CUVVFaWZRPT1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gcmVzb3VyY2VzL2Fzc2V0cy90eXBlc2NyaXB0L1BsdWdpbnMvUGx1Z2lucy5qcyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

eval("// Line shaped progress bar\n\nvar Shape = __webpack_require__(1);\nvar utils = __webpack_require__(0);\n\nvar Line = function Line(container, options) {\n    this._pathTemplate = 'M 0,{center} L 100,{center}';\n    Shape.apply(this, arguments);\n};\n\nLine.prototype = new Shape();\nLine.prototype.constructor = Line;\n\nLine.prototype._initializeSvg = function _initializeSvg(svg, opts) {\n    svg.setAttribute('viewBox', '0 0 100 ' + opts.strokeWidth);\n    svg.setAttribute('preserveAspectRatio', 'none');\n};\n\nLine.prototype._pathString = function _pathString(opts) {\n    return utils.render(this._pathTemplate, {\n        center: opts.strokeWidth / 2\n    });\n};\n\nLine.prototype._trailString = function _trailString(opts) {\n    return this._pathString(opts);\n};\n\nmodule.exports = Line;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9ub2RlX21vZHVsZXMvcHJvZ3Jlc3NiYXIuanMvc3JjL2xpbmUuanM/ZDFhYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBMaW5lIHNoYXBlZCBwcm9ncmVzcyBiYXJcblxudmFyIFNoYXBlID0gcmVxdWlyZSgnLi9zaGFwZScpO1xudmFyIHV0aWxzID0gcmVxdWlyZSgnLi91dGlscycpO1xuXG52YXIgTGluZSA9IGZ1bmN0aW9uIExpbmUoY29udGFpbmVyLCBvcHRpb25zKSB7XG4gICAgdGhpcy5fcGF0aFRlbXBsYXRlID0gJ00gMCx7Y2VudGVyfSBMIDEwMCx7Y2VudGVyfSc7XG4gICAgU2hhcGUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG5cbkxpbmUucHJvdG90eXBlID0gbmV3IFNoYXBlKCk7XG5MaW5lLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IExpbmU7XG5cbkxpbmUucHJvdG90eXBlLl9pbml0aWFsaXplU3ZnID0gZnVuY3Rpb24gX2luaXRpYWxpemVTdmcoc3ZnLCBvcHRzKSB7XG4gICAgc3ZnLnNldEF0dHJpYnV0ZSgndmlld0JveCcsICcwIDAgMTAwICcgKyBvcHRzLnN0cm9rZVdpZHRoKTtcbiAgICBzdmcuc2V0QXR0cmlidXRlKCdwcmVzZXJ2ZUFzcGVjdFJhdGlvJywgJ25vbmUnKTtcbn07XG5cbkxpbmUucHJvdG90eXBlLl9wYXRoU3RyaW5nID0gZnVuY3Rpb24gX3BhdGhTdHJpbmcob3B0cykge1xuICAgIHJldHVybiB1dGlscy5yZW5kZXIodGhpcy5fcGF0aFRlbXBsYXRlLCB7XG4gICAgICAgIGNlbnRlcjogb3B0cy5zdHJva2VXaWR0aCAvIDJcbiAgICB9KTtcbn07XG5cbkxpbmUucHJvdG90eXBlLl90cmFpbFN0cmluZyA9IGZ1bmN0aW9uIF90cmFpbFN0cmluZyhvcHRzKSB7XG4gICAgcmV0dXJuIHRoaXMuX3BhdGhTdHJpbmcob3B0cyk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IExpbmU7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gbm9kZV9tb2R1bGVzL3Byb2dyZXNzYmFyLmpzL3NyYy9saW5lLmpzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

eval("// Semi-SemiCircle shaped progress bar\n\nvar Shape = __webpack_require__(1);\nvar Circle = __webpack_require__(2);\nvar utils = __webpack_require__(0);\n\nvar SemiCircle = function SemiCircle(container, options) {\n    // Use one arc to form a SemiCircle\n    // See this answer http://stackoverflow.com/a/10477334/1446092\n    this._pathTemplate =\n        'M 50,50 m -{radius},0' +\n        ' a {radius},{radius} 0 1 1 {2radius},0';\n\n    this.containerAspectRatio = 2;\n\n    Shape.apply(this, arguments);\n};\n\nSemiCircle.prototype = new Shape();\nSemiCircle.prototype.constructor = SemiCircle;\n\nSemiCircle.prototype._initializeSvg = function _initializeSvg(svg, opts) {\n    svg.setAttribute('viewBox', '0 0 100 50');\n};\n\nSemiCircle.prototype._initializeTextContainer = function _initializeTextContainer(\n    opts,\n    container,\n    textContainer\n) {\n    if (opts.text.style) {\n        // Reset top style\n        textContainer.style.top = 'auto';\n        textContainer.style.bottom = '0';\n\n        if (opts.text.alignToBottom) {\n            utils.setStyle(textContainer, 'transform', 'translate(-50%, 0)');\n        } else {\n            utils.setStyle(textContainer, 'transform', 'translate(-50%, 50%)');\n        }\n    }\n};\n\n// Share functionality with Circle, just have different path\nSemiCircle.prototype._pathString = Circle.prototype._pathString;\nSemiCircle.prototype._trailString = Circle.prototype._trailString;\n\nmodule.exports = SemiCircle;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9ub2RlX21vZHVsZXMvcHJvZ3Jlc3NiYXIuanMvc3JjL3NlbWljaXJjbGUuanM/YzZjMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTZW1pLVNlbWlDaXJjbGUgc2hhcGVkIHByb2dyZXNzIGJhclxuXG52YXIgU2hhcGUgPSByZXF1aXJlKCcuL3NoYXBlJyk7XG52YXIgQ2lyY2xlID0gcmVxdWlyZSgnLi9jaXJjbGUnKTtcbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vdXRpbHMnKTtcblxudmFyIFNlbWlDaXJjbGUgPSBmdW5jdGlvbiBTZW1pQ2lyY2xlKGNvbnRhaW5lciwgb3B0aW9ucykge1xuICAgIC8vIFVzZSBvbmUgYXJjIHRvIGZvcm0gYSBTZW1pQ2lyY2xlXG4gICAgLy8gU2VlIHRoaXMgYW5zd2VyIGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9hLzEwNDc3MzM0LzE0NDYwOTJcbiAgICB0aGlzLl9wYXRoVGVtcGxhdGUgPVxuICAgICAgICAnTSA1MCw1MCBtIC17cmFkaXVzfSwwJyArXG4gICAgICAgICcgYSB7cmFkaXVzfSx7cmFkaXVzfSAwIDEgMSB7MnJhZGl1c30sMCc7XG5cbiAgICB0aGlzLmNvbnRhaW5lckFzcGVjdFJhdGlvID0gMjtcblxuICAgIFNoYXBlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59O1xuXG5TZW1pQ2lyY2xlLnByb3RvdHlwZSA9IG5ldyBTaGFwZSgpO1xuU2VtaUNpcmNsZS5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBTZW1pQ2lyY2xlO1xuXG5TZW1pQ2lyY2xlLnByb3RvdHlwZS5faW5pdGlhbGl6ZVN2ZyA9IGZ1bmN0aW9uIF9pbml0aWFsaXplU3ZnKHN2Zywgb3B0cykge1xuICAgIHN2Zy5zZXRBdHRyaWJ1dGUoJ3ZpZXdCb3gnLCAnMCAwIDEwMCA1MCcpO1xufTtcblxuU2VtaUNpcmNsZS5wcm90b3R5cGUuX2luaXRpYWxpemVUZXh0Q29udGFpbmVyID0gZnVuY3Rpb24gX2luaXRpYWxpemVUZXh0Q29udGFpbmVyKFxuICAgIG9wdHMsXG4gICAgY29udGFpbmVyLFxuICAgIHRleHRDb250YWluZXJcbikge1xuICAgIGlmIChvcHRzLnRleHQuc3R5bGUpIHtcbiAgICAgICAgLy8gUmVzZXQgdG9wIHN0eWxlXG4gICAgICAgIHRleHRDb250YWluZXIuc3R5bGUudG9wID0gJ2F1dG8nO1xuICAgICAgICB0ZXh0Q29udGFpbmVyLnN0eWxlLmJvdHRvbSA9ICcwJztcblxuICAgICAgICBpZiAob3B0cy50ZXh0LmFsaWduVG9Cb3R0b20pIHtcbiAgICAgICAgICAgIHV0aWxzLnNldFN0eWxlKHRleHRDb250YWluZXIsICd0cmFuc2Zvcm0nLCAndHJhbnNsYXRlKC01MCUsIDApJyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB1dGlscy5zZXRTdHlsZSh0ZXh0Q29udGFpbmVyLCAndHJhbnNmb3JtJywgJ3RyYW5zbGF0ZSgtNTAlLCA1MCUpJyk7XG4gICAgICAgIH1cbiAgICB9XG59O1xuXG4vLyBTaGFyZSBmdW5jdGlvbmFsaXR5IHdpdGggQ2lyY2xlLCBqdXN0IGhhdmUgZGlmZmVyZW50IHBhdGhcblNlbWlDaXJjbGUucHJvdG90eXBlLl9wYXRoU3RyaW5nID0gQ2lyY2xlLnByb3RvdHlwZS5fcGF0aFN0cmluZztcblNlbWlDaXJjbGUucHJvdG90eXBlLl90cmFpbFN0cmluZyA9IENpcmNsZS5wcm90b3R5cGUuX3RyYWlsU3RyaW5nO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFNlbWlDaXJjbGU7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gbm9kZV9tb2R1bGVzL3Byb2dyZXNzYmFyLmpzL3NyYy9zZW1pY2lyY2xlLmpzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

eval("/* shifty - v1.5.2 - 2016-02-10 - http://jeremyckahn.github.io/shifty */\n;(function () {\n  var root = this || Function('return this')();\n\n/**\n * Shifty Core\n * By Jeremy Kahn - jeremyckahn@gmail.com\n */\n\nvar Tweenable = (function () {\n\n  'use strict';\n\n  // Aliases that get defined later in this function\n  var formula;\n\n  // CONSTANTS\n  var DEFAULT_SCHEDULE_FUNCTION;\n  var DEFAULT_EASING = 'linear';\n  var DEFAULT_DURATION = 500;\n  var UPDATE_TIME = 1000 / 60;\n\n  var _now = Date.now\n       ? Date.now\n       : function () {return +new Date();};\n\n  var now = typeof SHIFTY_DEBUG_NOW !== 'undefined' ? SHIFTY_DEBUG_NOW : _now;\n\n  if (typeof window !== 'undefined') {\n    // requestAnimationFrame() shim by Paul Irish (modified for Shifty)\n    // http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n    DEFAULT_SCHEDULE_FUNCTION = window.requestAnimationFrame\n       || window.webkitRequestAnimationFrame\n       || window.oRequestAnimationFrame\n       || window.msRequestAnimationFrame\n       || (window.mozCancelRequestAnimationFrame\n       && window.mozRequestAnimationFrame)\n       || setTimeout;\n  } else {\n    DEFAULT_SCHEDULE_FUNCTION = setTimeout;\n  }\n\n  function noop () {\n    // NOOP!\n  }\n\n  /**\n   * Handy shortcut for doing a for-in loop. This is not a \"normal\" each\n   * function, it is optimized for Shifty.  The iterator function only receives\n   * the property name, not the value.\n   * @param {Object} obj\n   * @param {Function(string)} fn\n   * @private\n   */\n  function each (obj, fn) {\n    var key;\n    for (key in obj) {\n      if (Object.hasOwnProperty.call(obj, key)) {\n        fn(key);\n      }\n    }\n  }\n\n  /**\n   * Perform a shallow copy of Object properties.\n   * @param {Object} targetObject The object to copy into\n   * @param {Object} srcObject The object to copy from\n   * @return {Object} A reference to the augmented `targetObj` Object\n   * @private\n   */\n  function shallowCopy (targetObj, srcObj) {\n    each(srcObj, function (prop) {\n      targetObj[prop] = srcObj[prop];\n    });\n\n    return targetObj;\n  }\n\n  /**\n   * Copies each property from src onto target, but only if the property to\n   * copy to target is undefined.\n   * @param {Object} target Missing properties in this Object are filled in\n   * @param {Object} src\n   * @private\n   */\n  function defaults (target, src) {\n    each(src, function (prop) {\n      if (typeof target[prop] === 'undefined') {\n        target[prop] = src[prop];\n      }\n    });\n  }\n\n  /**\n   * Calculates the interpolated tween values of an Object for a given\n   * timestamp.\n   * @param {Number} forPosition The position to compute the state for.\n   * @param {Object} currentState Current state properties.\n   * @param {Object} originalState: The original state properties the Object is\n   * tweening from.\n   * @param {Object} targetState: The destination state properties the Object\n   * is tweening to.\n   * @param {number} duration: The length of the tween in milliseconds.\n   * @param {number} timestamp: The UNIX epoch time at which the tween began.\n   * @param {Object} easing: This Object's keys must correspond to the keys in\n   * targetState.\n   * @private\n   */\n  function tweenProps (forPosition, currentState, originalState, targetState,\n    duration, timestamp, easing) {\n    var normalizedPosition =\n        forPosition < timestamp ? 0 : (forPosition - timestamp) / duration;\n\n\n    var prop;\n    var easingObjectProp;\n    var easingFn;\n    for (prop in currentState) {\n      if (currentState.hasOwnProperty(prop)) {\n        easingObjectProp = easing[prop];\n        easingFn = typeof easingObjectProp === 'function'\n          ? easingObjectProp\n          : formula[easingObjectProp];\n\n        currentState[prop] = tweenProp(\n          originalState[prop],\n          targetState[prop],\n          easingFn,\n          normalizedPosition\n        );\n      }\n    }\n\n    return currentState;\n  }\n\n  /**\n   * Tweens a single property.\n   * @param {number} start The value that the tween started from.\n   * @param {number} end The value that the tween should end at.\n   * @param {Function} easingFunc The easing curve to apply to the tween.\n   * @param {number} position The normalized position (between 0.0 and 1.0) to\n   * calculate the midpoint of 'start' and 'end' against.\n   * @return {number} The tweened value.\n   * @private\n   */\n  function tweenProp (start, end, easingFunc, position) {\n    return start + (end - start) * easingFunc(position);\n  }\n\n  /**\n   * Applies a filter to Tweenable instance.\n   * @param {Tweenable} tweenable The `Tweenable` instance to call the filter\n   * upon.\n   * @param {String} filterName The name of the filter to apply.\n   * @private\n   */\n  function applyFilter (tweenable, filterName) {\n    var filters = Tweenable.prototype.filter;\n    var args = tweenable._filterArgs;\n\n    each(filters, function (name) {\n      if (typeof filters[name][filterName] !== 'undefined') {\n        filters[name][filterName].apply(tweenable, args);\n      }\n    });\n  }\n\n  var timeoutHandler_endTime;\n  var timeoutHandler_currentTime;\n  var timeoutHandler_isEnded;\n  var timeoutHandler_offset;\n  /**\n   * Handles the update logic for one step of a tween.\n   * @param {Tweenable} tweenable\n   * @param {number} timestamp\n   * @param {number} delay\n   * @param {number} duration\n   * @param {Object} currentState\n   * @param {Object} originalState\n   * @param {Object} targetState\n   * @param {Object} easing\n   * @param {Function(Object, *, number)} step\n   * @param {Function(Function,number)}} schedule\n   * @param {number=} opt_currentTimeOverride Needed for accurate timestamp in\n   * Tweenable#seek.\n   * @private\n   */\n  function timeoutHandler (tweenable, timestamp, delay, duration, currentState,\n    originalState, targetState, easing, step, schedule,\n    opt_currentTimeOverride) {\n\n    timeoutHandler_endTime = timestamp + delay + duration;\n\n    timeoutHandler_currentTime =\n    Math.min(opt_currentTimeOverride || now(), timeoutHandler_endTime);\n\n    timeoutHandler_isEnded =\n      timeoutHandler_currentTime >= timeoutHandler_endTime;\n\n    timeoutHandler_offset = duration - (\n      timeoutHandler_endTime - timeoutHandler_currentTime);\n\n    if (tweenable.isPlaying()) {\n      if (timeoutHandler_isEnded) {\n        step(targetState, tweenable._attachment, timeoutHandler_offset);\n        tweenable.stop(true);\n      } else {\n        tweenable._scheduleId =\n          schedule(tweenable._timeoutHandler, UPDATE_TIME);\n\n        applyFilter(tweenable, 'beforeTween');\n\n        // If the animation has not yet reached the start point (e.g., there was\n        // delay that has not yet completed), just interpolate the starting\n        // position of the tween.\n        if (timeoutHandler_currentTime < (timestamp + delay)) {\n          tweenProps(1, currentState, originalState, targetState, 1, 1, easing);\n        } else {\n          tweenProps(timeoutHandler_currentTime, currentState, originalState,\n            targetState, duration, timestamp + delay, easing);\n        }\n\n        applyFilter(tweenable, 'afterTween');\n\n        step(currentState, tweenable._attachment, timeoutHandler_offset);\n      }\n    }\n  }\n\n\n  /**\n   * Creates a usable easing Object from a string, a function or another easing\n   * Object.  If `easing` is an Object, then this function clones it and fills\n   * in the missing properties with `\"linear\"`.\n   * @param {Object.<string|Function>} fromTweenParams\n   * @param {Object|string|Function} easing\n   * @return {Object.<string|Function>}\n   * @private\n   */\n  function composeEasingObject (fromTweenParams, easing) {\n    var composedEasing = {};\n    var typeofEasing = typeof easing;\n\n    if (typeofEasing === 'string' || typeofEasing === 'function') {\n      each(fromTweenParams, function (prop) {\n        composedEasing[prop] = easing;\n      });\n    } else {\n      each(fromTweenParams, function (prop) {\n        if (!composedEasing[prop]) {\n          composedEasing[prop] = easing[prop] || DEFAULT_EASING;\n        }\n      });\n    }\n\n    return composedEasing;\n  }\n\n  /**\n   * Tweenable constructor.\n   * @class Tweenable\n   * @param {Object=} opt_initialState The values that the initial tween should\n   * start at if a `from` object is not provided to `{{#crossLink\n   * \"Tweenable/tween:method\"}}{{/crossLink}}` or `{{#crossLink\n   * \"Tweenable/setConfig:method\"}}{{/crossLink}}`.\n   * @param {Object=} opt_config Configuration object to be passed to\n   * `{{#crossLink \"Tweenable/setConfig:method\"}}{{/crossLink}}`.\n   * @module Tweenable\n   * @constructor\n   */\n  function Tweenable (opt_initialState, opt_config) {\n    this._currentState = opt_initialState || {};\n    this._configured = false;\n    this._scheduleFunction = DEFAULT_SCHEDULE_FUNCTION;\n\n    // To prevent unnecessary calls to setConfig do not set default\n    // configuration here.  Only set default configuration immediately before\n    // tweening if none has been set.\n    if (typeof opt_config !== 'undefined') {\n      this.setConfig(opt_config);\n    }\n  }\n\n  /**\n   * Configure and start a tween.\n   * @method tween\n   * @param {Object=} opt_config Configuration object to be passed to\n   * `{{#crossLink \"Tweenable/setConfig:method\"}}{{/crossLink}}`.\n   * @chainable\n   */\n  Tweenable.prototype.tween = function (opt_config) {\n    if (this._isTweening) {\n      return this;\n    }\n\n    // Only set default config if no configuration has been set previously and\n    // none is provided now.\n    if (opt_config !== undefined || !this._configured) {\n      this.setConfig(opt_config);\n    }\n\n    this._timestamp = now();\n    this._start(this.get(), this._attachment);\n    return this.resume();\n  };\n\n  /**\n   * Configure a tween that will start at some point in the future.\n   *\n   * @method setConfig\n   * @param {Object} config The following values are valid:\n   * - __from__ (_Object=_): Starting position.  If omitted, `{{#crossLink\n   *   \"Tweenable/get:method\"}}get(){{/crossLink}}` is used.\n   * - __to__ (_Object=_): Ending position.\n   * - __duration__ (_number=_): How many milliseconds to animate for.\n   * - __delay__ (_delay=_): How many milliseconds to wait before starting the\n   *   tween.\n   * - __start__ (_Function(Object, *)_): Function to execute when the tween\n   *   begins.  Receives the state of the tween as the first parameter and\n   *   `attachment` as the second parameter.\n   * - __step__ (_Function(Object, *, number)_): Function to execute on every\n   *   tick.  Receives `{{#crossLink\n   *   \"Tweenable/get:method\"}}get(){{/crossLink}}` as the first parameter,\n   *   `attachment` as the second parameter, and the time elapsed since the\n   *   start of the tween as the third. This function is not called on the\n   *   final step of the animation, but `finish` is.\n   * - __finish__ (_Function(Object, *)_): Function to execute upon tween\n   *   completion.  Receives the state of the tween as the first parameter and\n   *   `attachment` as the second parameter.\n   * - __easing__ (_Object.<string|Function>|string|Function=_): Easing curve\n   *   name(s) or function(s) to use for the tween.\n   * - __attachment__ (_*_): Cached value that is passed to the\n   *   `step`/`start`/`finish` methods.\n   * @chainable\n   */\n  Tweenable.prototype.setConfig = function (config) {\n    config = config || {};\n    this._configured = true;\n\n    // Attach something to this Tweenable instance (e.g.: a DOM element, an\n    // object, a string, etc.);\n    this._attachment = config.attachment;\n\n    // Init the internal state\n    this._pausedAtTime = null;\n    this._scheduleId = null;\n    this._delay = config.delay || 0;\n    this._start = config.start || noop;\n    this._step = config.step || noop;\n    this._finish = config.finish || noop;\n    this._duration = config.duration || DEFAULT_DURATION;\n    this._currentState = shallowCopy({}, config.from) || this.get();\n    this._originalState = this.get();\n    this._targetState = shallowCopy({}, config.to) || this.get();\n\n    var self = this;\n    this._timeoutHandler = function () {\n      timeoutHandler(self,\n        self._timestamp,\n        self._delay,\n        self._duration,\n        self._currentState,\n        self._originalState,\n        self._targetState,\n        self._easing,\n        self._step,\n        self._scheduleFunction\n      );\n    };\n\n    // Aliases used below\n    var currentState = this._currentState;\n    var targetState = this._targetState;\n\n    // Ensure that there is always something to tween to.\n    defaults(targetState, currentState);\n\n    this._easing = composeEasingObject(\n      currentState, config.easing || DEFAULT_EASING);\n\n    this._filterArgs =\n      [currentState, this._originalState, targetState, this._easing];\n\n    applyFilter(this, 'tweenCreated');\n    return this;\n  };\n\n  /**\n   * @method get\n   * @return {Object} The current state.\n   */\n  Tweenable.prototype.get = function () {\n    return shallowCopy({}, this._currentState);\n  };\n\n  /**\n   * @method set\n   * @param {Object} state The current state.\n   */\n  Tweenable.prototype.set = function (state) {\n    this._currentState = state;\n  };\n\n  /**\n   * Pause a tween.  Paused tweens can be resumed from the point at which they\n   * were paused.  This is different from `{{#crossLink\n   * \"Tweenable/stop:method\"}}{{/crossLink}}`, as that method\n   * causes a tween to start over when it is resumed.\n   * @method pause\n   * @chainable\n   */\n  Tweenable.prototype.pause = function () {\n    this._pausedAtTime = now();\n    this._isPaused = true;\n    return this;\n  };\n\n  /**\n   * Resume a paused tween.\n   * @method resume\n   * @chainable\n   */\n  Tweenable.prototype.resume = function () {\n    if (this._isPaused) {\n      this._timestamp += now() - this._pausedAtTime;\n    }\n\n    this._isPaused = false;\n    this._isTweening = true;\n\n    this._timeoutHandler();\n\n    return this;\n  };\n\n  /**\n   * Move the state of the animation to a specific point in the tween's\n   * timeline.  If the animation is not running, this will cause the `step`\n   * handlers to be called.\n   * @method seek\n   * @param {millisecond} millisecond The millisecond of the animation to seek\n   * to.  This must not be less than `0`.\n   * @chainable\n   */\n  Tweenable.prototype.seek = function (millisecond) {\n    millisecond = Math.max(millisecond, 0);\n    var currentTime = now();\n\n    if ((this._timestamp + millisecond) === 0) {\n      return this;\n    }\n\n    this._timestamp = currentTime - millisecond;\n\n    if (!this.isPlaying()) {\n      this._isTweening = true;\n      this._isPaused = false;\n\n      // If the animation is not running, call timeoutHandler to make sure that\n      // any step handlers are run.\n      timeoutHandler(this,\n        this._timestamp,\n        this._delay,\n        this._duration,\n        this._currentState,\n        this._originalState,\n        this._targetState,\n        this._easing,\n        this._step,\n        this._scheduleFunction,\n        currentTime\n      );\n\n      this.pause();\n    }\n\n    return this;\n  };\n\n  /**\n   * Stops and cancels a tween.\n   * @param {boolean=} gotoEnd If `false` or omitted, the tween just stops at\n   * its current state, and the `finish` handler is not invoked.  If `true`,\n   * the tweened object's values are instantly set to the target values, and\n   * `finish` is invoked.\n   * @method stop\n   * @chainable\n   */\n  Tweenable.prototype.stop = function (gotoEnd) {\n    this._isTweening = false;\n    this._isPaused = false;\n    this._timeoutHandler = noop;\n\n    (root.cancelAnimationFrame            ||\n    root.webkitCancelAnimationFrame     ||\n    root.oCancelAnimationFrame          ||\n    root.msCancelAnimationFrame         ||\n    root.mozCancelRequestAnimationFrame ||\n    root.clearTimeout)(this._scheduleId);\n\n    if (gotoEnd) {\n      applyFilter(this, 'beforeTween');\n      tweenProps(\n        1,\n        this._currentState,\n        this._originalState,\n        this._targetState,\n        1,\n        0,\n        this._easing\n      );\n      applyFilter(this, 'afterTween');\n      applyFilter(this, 'afterTweenEnd');\n      this._finish.call(this, this._currentState, this._attachment);\n    }\n\n    return this;\n  };\n\n  /**\n   * @method isPlaying\n   * @return {boolean} Whether or not a tween is running.\n   */\n  Tweenable.prototype.isPlaying = function () {\n    return this._isTweening && !this._isPaused;\n  };\n\n  /**\n   * Set a custom schedule function.\n   *\n   * If a custom function is not set,\n   * [`requestAnimationFrame`](https://developer.mozilla.org/en-US/docs/Web/API/window.requestAnimationFrame)\n   * is used if available, otherwise\n   * [`setTimeout`](https://developer.mozilla.org/en-US/docs/Web/API/Window.setTimeout)\n   * is used.\n   * @method setScheduleFunction\n   * @param {Function(Function,number)} scheduleFunction The function to be\n   * used to schedule the next frame to be rendered.\n   */\n  Tweenable.prototype.setScheduleFunction = function (scheduleFunction) {\n    this._scheduleFunction = scheduleFunction;\n  };\n\n  /**\n   * `delete` all \"own\" properties.  Call this when the `Tweenable` instance\n   * is no longer needed to free memory.\n   * @method dispose\n   */\n  Tweenable.prototype.dispose = function () {\n    var this$1 = this;\n\n    var prop;\n    for (prop in this) {\n      if (this$1.hasOwnProperty(prop)) {\n        delete this$1[prop];\n      }\n    }\n  };\n\n  /**\n   * Filters are used for transforming the properties of a tween at various\n   * points in a Tweenable's life cycle.  See the README for more info on this.\n   * @private\n   */\n  Tweenable.prototype.filter = {};\n\n  /**\n   * This object contains all of the tweens available to Shifty.  It is\n   * extensible - simply attach properties to the `Tweenable.prototype.formula`\n   * Object following the same format as `linear`.\n   *\n   * `pos` should be a normalized `number` (between 0 and 1).\n   * @property formula\n   * @type {Object(function)}\n   */\n  Tweenable.prototype.formula = {\n    linear: function (pos) {\n      return pos;\n    }\n  };\n\n  formula = Tweenable.prototype.formula;\n\n  shallowCopy(Tweenable, {\n    'now': now\n    ,'each': each\n    ,'tweenProps': tweenProps\n    ,'tweenProp': tweenProp\n    ,'applyFilter': applyFilter\n    ,'shallowCopy': shallowCopy\n    ,'defaults': defaults\n    ,'composeEasingObject': composeEasingObject\n  });\n\n  // `root` is provided in the intro/outro files.\n\n  // A hook used for unit testing.\n  if (typeof SHIFTY_DEBUG_NOW === 'function') {\n    root.timeoutHandler = timeoutHandler;\n  }\n\n  // Bootstrap Tweenable appropriately for the environment.\n  if (true) {\n    // CommonJS\n    module.exports = Tweenable;\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD\n    define(function () {return Tweenable;});\n  } else if (typeof root.Tweenable === 'undefined') {\n    // Browser: Make `Tweenable` globally accessible.\n    root.Tweenable = Tweenable;\n  }\n\n  return Tweenable;\n\n} ());\n\n/*!\n * All equations are adapted from Thomas Fuchs'\n * [Scripty2](https://github.com/madrobby/scripty2/blob/master/src/effects/transitions/penner.js).\n *\n * Based on Easing Equations (c) 2003 [Robert\n * Penner](http://www.robertpenner.com/), all rights reserved. This work is\n * [subject to terms](http://www.robertpenner.com/easing_terms_of_use.html).\n */\n\n/*!\n *  TERMS OF USE - EASING EQUATIONS\n *  Open source under the BSD License.\n *  Easing Equations (c) 2003 Robert Penner, all rights reserved.\n */\n\n;(function () {\n\n  Tweenable.shallowCopy(Tweenable.prototype.formula, {\n    easeInQuad: function (pos) {\n      return Math.pow(pos, 2);\n    },\n\n    easeOutQuad: function (pos) {\n      return -(Math.pow((pos - 1), 2) - 1);\n    },\n\n    easeInOutQuad: function (pos) {\n      if ((pos /= 0.5) < 1) {return 0.5 * Math.pow(pos,2);}\n      return -0.5 * ((pos -= 2) * pos - 2);\n    },\n\n    easeInCubic: function (pos) {\n      return Math.pow(pos, 3);\n    },\n\n    easeOutCubic: function (pos) {\n      return (Math.pow((pos - 1), 3) + 1);\n    },\n\n    easeInOutCubic: function (pos) {\n      if ((pos /= 0.5) < 1) {return 0.5 * Math.pow(pos,3);}\n      return 0.5 * (Math.pow((pos - 2),3) + 2);\n    },\n\n    easeInQuart: function (pos) {\n      return Math.pow(pos, 4);\n    },\n\n    easeOutQuart: function (pos) {\n      return -(Math.pow((pos - 1), 4) - 1);\n    },\n\n    easeInOutQuart: function (pos) {\n      if ((pos /= 0.5) < 1) {return 0.5 * Math.pow(pos,4);}\n      return -0.5 * ((pos -= 2) * Math.pow(pos,3) - 2);\n    },\n\n    easeInQuint: function (pos) {\n      return Math.pow(pos, 5);\n    },\n\n    easeOutQuint: function (pos) {\n      return (Math.pow((pos - 1), 5) + 1);\n    },\n\n    easeInOutQuint: function (pos) {\n      if ((pos /= 0.5) < 1) {return 0.5 * Math.pow(pos,5);}\n      return 0.5 * (Math.pow((pos - 2),5) + 2);\n    },\n\n    easeInSine: function (pos) {\n      return -Math.cos(pos * (Math.PI / 2)) + 1;\n    },\n\n    easeOutSine: function (pos) {\n      return Math.sin(pos * (Math.PI / 2));\n    },\n\n    easeInOutSine: function (pos) {\n      return (-0.5 * (Math.cos(Math.PI * pos) - 1));\n    },\n\n    easeInExpo: function (pos) {\n      return (pos === 0) ? 0 : Math.pow(2, 10 * (pos - 1));\n    },\n\n    easeOutExpo: function (pos) {\n      return (pos === 1) ? 1 : -Math.pow(2, -10 * pos) + 1;\n    },\n\n    easeInOutExpo: function (pos) {\n      if (pos === 0) {return 0;}\n      if (pos === 1) {return 1;}\n      if ((pos /= 0.5) < 1) {return 0.5 * Math.pow(2,10 * (pos - 1));}\n      return 0.5 * (-Math.pow(2, -10 * --pos) + 2);\n    },\n\n    easeInCirc: function (pos) {\n      return -(Math.sqrt(1 - (pos * pos)) - 1);\n    },\n\n    easeOutCirc: function (pos) {\n      return Math.sqrt(1 - Math.pow((pos - 1), 2));\n    },\n\n    easeInOutCirc: function (pos) {\n      if ((pos /= 0.5) < 1) {return -0.5 * (Math.sqrt(1 - pos * pos) - 1);}\n      return 0.5 * (Math.sqrt(1 - (pos -= 2) * pos) + 1);\n    },\n\n    easeOutBounce: function (pos) {\n      if ((pos) < (1 / 2.75)) {\n        return (7.5625 * pos * pos);\n      } else if (pos < (2 / 2.75)) {\n        return (7.5625 * (pos -= (1.5 / 2.75)) * pos + 0.75);\n      } else if (pos < (2.5 / 2.75)) {\n        return (7.5625 * (pos -= (2.25 / 2.75)) * pos + 0.9375);\n      } else {\n        return (7.5625 * (pos -= (2.625 / 2.75)) * pos + 0.984375);\n      }\n    },\n\n    easeInBack: function (pos) {\n      var s = 1.70158;\n      return (pos) * pos * ((s + 1) * pos - s);\n    },\n\n    easeOutBack: function (pos) {\n      var s = 1.70158;\n      return (pos = pos - 1) * pos * ((s + 1) * pos + s) + 1;\n    },\n\n    easeInOutBack: function (pos) {\n      var s = 1.70158;\n      if ((pos /= 0.5) < 1) {\n        return 0.5 * (pos * pos * (((s *= (1.525)) + 1) * pos - s));\n      }\n      return 0.5 * ((pos -= 2) * pos * (((s *= (1.525)) + 1) * pos + s) + 2);\n    },\n\n    elastic: function (pos) {\n      // jshint maxlen:90\n      return -1 * Math.pow(4,-8 * pos) * Math.sin((pos * 6 - 1) * (2 * Math.PI) / 2) + 1;\n    },\n\n    swingFromTo: function (pos) {\n      var s = 1.70158;\n      return ((pos /= 0.5) < 1) ?\n          0.5 * (pos * pos * (((s *= (1.525)) + 1) * pos - s)) :\n          0.5 * ((pos -= 2) * pos * (((s *= (1.525)) + 1) * pos + s) + 2);\n    },\n\n    swingFrom: function (pos) {\n      var s = 1.70158;\n      return pos * pos * ((s + 1) * pos - s);\n    },\n\n    swingTo: function (pos) {\n      var s = 1.70158;\n      return (pos -= 1) * pos * ((s + 1) * pos + s) + 1;\n    },\n\n    bounce: function (pos) {\n      if (pos < (1 / 2.75)) {\n        return (7.5625 * pos * pos);\n      } else if (pos < (2 / 2.75)) {\n        return (7.5625 * (pos -= (1.5 / 2.75)) * pos + 0.75);\n      } else if (pos < (2.5 / 2.75)) {\n        return (7.5625 * (pos -= (2.25 / 2.75)) * pos + 0.9375);\n      } else {\n        return (7.5625 * (pos -= (2.625 / 2.75)) * pos + 0.984375);\n      }\n    },\n\n    bouncePast: function (pos) {\n      if (pos < (1 / 2.75)) {\n        return (7.5625 * pos * pos);\n      } else if (pos < (2 / 2.75)) {\n        return 2 - (7.5625 * (pos -= (1.5 / 2.75)) * pos + 0.75);\n      } else if (pos < (2.5 / 2.75)) {\n        return 2 - (7.5625 * (pos -= (2.25 / 2.75)) * pos + 0.9375);\n      } else {\n        return 2 - (7.5625 * (pos -= (2.625 / 2.75)) * pos + 0.984375);\n      }\n    },\n\n    easeFromTo: function (pos) {\n      if ((pos /= 0.5) < 1) {return 0.5 * Math.pow(pos,4);}\n      return -0.5 * ((pos -= 2) * Math.pow(pos,3) - 2);\n    },\n\n    easeFrom: function (pos) {\n      return Math.pow(pos,4);\n    },\n\n    easeTo: function (pos) {\n      return Math.pow(pos,0.25);\n    }\n  });\n\n}());\n\n// jshint maxlen:100\n/**\n * The Bezier magic in this file is adapted/copied almost wholesale from\n * [Scripty2](https://github.com/madrobby/scripty2/blob/master/src/effects/transitions/cubic-bezier.js),\n * which was adapted from Apple code (which probably came from\n * [here](http://opensource.apple.com/source/WebCore/WebCore-955.66/platform/graphics/UnitBezier.h)).\n * Special thanks to Apple and Thomas Fuchs for much of this code.\n */\n\n/**\n *  Copyright (c) 2006 Apple Computer, Inc. All rights reserved.\n *\n *  Redistribution and use in source and binary forms, with or without\n *  modification, are permitted provided that the following conditions are met:\n *\n *  1. Redistributions of source code must retain the above copyright notice,\n *  this list of conditions and the following disclaimer.\n *\n *  2. Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation\n *  and/or other materials provided with the distribution.\n *\n *  3. Neither the name of the copyright holder(s) nor the names of any\n *  contributors may be used to endorse or promote products derived from\n *  this software without specific prior written permission.\n *\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n *  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n *  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n *  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n *  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n *  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n *  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n *  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n *  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n *  POSSIBILITY OF SUCH DAMAGE.\n */\n;(function () {\n  // port of webkit cubic bezier handling by http://www.netzgesta.de/dev/\n  function cubicBezierAtTime(t,p1x,p1y,p2x,p2y,duration) {\n    var ax = 0,bx = 0,cx = 0,ay = 0,by = 0,cy = 0;\n    function sampleCurveX(t) {\n      return ((ax * t + bx) * t + cx) * t;\n    }\n    function sampleCurveY(t) {\n      return ((ay * t + by) * t + cy) * t;\n    }\n    function sampleCurveDerivativeX(t) {\n      return (3.0 * ax * t + 2.0 * bx) * t + cx;\n    }\n    function solveEpsilon(duration) {\n      return 1.0 / (200.0 * duration);\n    }\n    function solve(x,epsilon) {\n      return sampleCurveY(solveCurveX(x, epsilon));\n    }\n    function fabs(n) {\n      if (n >= 0) {\n        return n;\n      } else {\n        return 0 - n;\n      }\n    }\n    function solveCurveX(x, epsilon) {\n      var t0,t1,t2,x2,d2,i;\n      for (t2 = x, i = 0; i < 8; i++) {\n        x2 = sampleCurveX(t2) - x;\n        if (fabs(x2) < epsilon) {\n          return t2;\n        }\n        d2 = sampleCurveDerivativeX(t2);\n        if (fabs(d2) < 1e-6) {\n          break;\n        }\n        t2 = t2 - x2 / d2;\n      }\n      t0 = 0.0;\n      t1 = 1.0;\n      t2 = x;\n      if (t2 < t0) {\n        return t0;\n      }\n      if (t2 > t1) {\n        return t1;\n      }\n      while (t0 < t1) {\n        x2 = sampleCurveX(t2);\n        if (fabs(x2 - x) < epsilon) {\n          return t2;\n        }\n        if (x > x2) {\n          t0 = t2;\n        }else {\n          t1 = t2;\n        }\n        t2 = (t1 - t0) * 0.5 + t0;\n      }\n      return t2; // Failure.\n    }\n    cx = 3.0 * p1x;\n    bx = 3.0 * (p2x - p1x) - cx;\n    ax = 1.0 - cx - bx;\n    cy = 3.0 * p1y;\n    by = 3.0 * (p2y - p1y) - cy;\n    ay = 1.0 - cy - by;\n    return solve(t, solveEpsilon(duration));\n  }\n  /**\n   *  getCubicBezierTransition(x1, y1, x2, y2) -> Function\n   *\n   *  Generates a transition easing function that is compatible\n   *  with WebKit's CSS transitions `-webkit-transition-timing-function`\n   *  CSS property.\n   *\n   *  The W3C has more information about CSS3 transition timing functions:\n   *  http://www.w3.org/TR/css3-transitions/#transition-timing-function_tag\n   *\n   *  @param {number} x1\n   *  @param {number} y1\n   *  @param {number} x2\n   *  @param {number} y2\n   *  @return {function}\n   *  @private\n   */\n  function getCubicBezierTransition (x1, y1, x2, y2) {\n    return function (pos) {\n      return cubicBezierAtTime(pos,x1,y1,x2,y2,1);\n    };\n  }\n  // End ported code\n\n  /**\n   * Create a Bezier easing function and attach it to `{{#crossLink\n   * \"Tweenable/formula:property\"}}Tweenable#formula{{/crossLink}}`.  This\n   * function gives you total control over the easing curve.  Matthew Lein's\n   * [Ceaser](http://matthewlein.com/ceaser/) is a useful tool for visualizing\n   * the curves you can make with this function.\n   * @method setBezierFunction\n   * @param {string} name The name of the easing curve.  Overwrites the old\n   * easing function on `{{#crossLink\n   * \"Tweenable/formula:property\"}}Tweenable#formula{{/crossLink}}` if it\n   * exists.\n   * @param {number} x1\n   * @param {number} y1\n   * @param {number} x2\n   * @param {number} y2\n   * @return {function} The easing function that was attached to\n   * Tweenable.prototype.formula.\n   */\n  Tweenable.setBezierFunction = function (name, x1, y1, x2, y2) {\n    var cubicBezierTransition = getCubicBezierTransition(x1, y1, x2, y2);\n    cubicBezierTransition.displayName = name;\n    cubicBezierTransition.x1 = x1;\n    cubicBezierTransition.y1 = y1;\n    cubicBezierTransition.x2 = x2;\n    cubicBezierTransition.y2 = y2;\n\n    return Tweenable.prototype.formula[name] = cubicBezierTransition;\n  };\n\n\n  /**\n   * `delete` an easing function from `{{#crossLink\n   * \"Tweenable/formula:property\"}}Tweenable#formula{{/crossLink}}`.  Be\n   * careful with this method, as it `delete`s whatever easing formula matches\n   * `name` (which means you can delete standard Shifty easing functions).\n   * @method unsetBezierFunction\n   * @param {string} name The name of the easing function to delete.\n   * @return {function}\n   */\n  Tweenable.unsetBezierFunction = function (name) {\n    delete Tweenable.prototype.formula[name];\n  };\n\n})();\n\n;(function () {\n\n  function getInterpolatedValues (\n    from, current, targetState, position, easing, delay) {\n    return Tweenable.tweenProps(\n      position, current, from, targetState, 1, delay, easing);\n  }\n\n  // Fake a Tweenable and patch some internals.  This approach allows us to\n  // skip uneccessary processing and object recreation, cutting down on garbage\n  // collection pauses.\n  var mockTweenable = new Tweenable();\n  mockTweenable._filterArgs = [];\n\n  /**\n   * Compute the midpoint of two Objects.  This method effectively calculates a\n   * specific frame of animation that `{{#crossLink\n   * \"Tweenable/tween:method\"}}{{/crossLink}}` does many times over the course\n   * of a full tween.\n   *\n   *     var interpolatedValues = Tweenable.interpolate({\n   *       width: '100px',\n   *       opacity: 0,\n   *       color: '#fff'\n   *     }, {\n   *       width: '200px',\n   *       opacity: 1,\n   *       color: '#000'\n   *     }, 0.5);\n   *\n   *     console.log(interpolatedValues);\n   *     // {opacity: 0.5, width: \"150px\", color: \"rgb(127,127,127)\"}\n   *\n   * @static\n   * @method interpolate\n   * @param {Object} from The starting values to tween from.\n   * @param {Object} targetState The ending values to tween to.\n   * @param {number} position The normalized position value (between `0.0` and\n   * `1.0`) to interpolate the values between `from` and `to` for.  `from`\n   * represents `0` and `to` represents `1`.\n   * @param {Object.<string|Function>|string|Function} easing The easing\n   * curve(s) to calculate the midpoint against.  You can reference any easing\n   * function attached to `Tweenable.prototype.formula`, or provide the easing\n   * function(s) directly.  If omitted, this defaults to \"linear\".\n   * @param {number=} opt_delay Optional delay to pad the beginning of the\n   * interpolated tween with.  This increases the range of `position` from (`0`\n   * through `1`) to (`0` through `1 + opt_delay`).  So, a delay of `0.5` would\n   * increase all valid values of `position` to numbers between `0` and `1.5`.\n   * @return {Object}\n   */\n  Tweenable.interpolate = function (\n    from, targetState, position, easing, opt_delay) {\n\n    var current = Tweenable.shallowCopy({}, from);\n    var delay = opt_delay || 0;\n    var easingObject = Tweenable.composeEasingObject(\n      from, easing || 'linear');\n\n    mockTweenable.set({});\n\n    // Alias and reuse the _filterArgs array instead of recreating it.\n    var filterArgs = mockTweenable._filterArgs;\n    filterArgs.length = 0;\n    filterArgs[0] = current;\n    filterArgs[1] = from;\n    filterArgs[2] = targetState;\n    filterArgs[3] = easingObject;\n\n    // Any defined value transformation must be applied\n    Tweenable.applyFilter(mockTweenable, 'tweenCreated');\n    Tweenable.applyFilter(mockTweenable, 'beforeTween');\n\n    var interpolatedValues = getInterpolatedValues(\n      from, current, targetState, position, easingObject, delay);\n\n    // Transform values back into their original format\n    Tweenable.applyFilter(mockTweenable, 'afterTween');\n\n    return interpolatedValues;\n  };\n\n}());\n\n/**\n * This module adds string interpolation support to Shifty.\n *\n * The Token extension allows Shifty to tween numbers inside of strings.  Among\n * other things, this allows you to animate CSS properties.  For example, you\n * can do this:\n *\n *     var tweenable = new Tweenable();\n *     tweenable.tween({\n *       from: { transform: 'translateX(45px)' },\n *       to: { transform: 'translateX(90xp)' }\n *     });\n *\n * `translateX(45)` will be tweened to `translateX(90)`.  To demonstrate:\n *\n *     var tweenable = new Tweenable();\n *     tweenable.tween({\n *       from: { transform: 'translateX(45px)' },\n *       to: { transform: 'translateX(90px)' },\n *       step: function (state) {\n *         console.log(state.transform);\n *       }\n *     });\n *\n * The above snippet will log something like this in the console:\n *\n *     translateX(60.3px)\n *     ...\n *     translateX(76.05px)\n *     ...\n *     translateX(90px)\n *\n * Another use for this is animating colors:\n *\n *     var tweenable = new Tweenable();\n *     tweenable.tween({\n *       from: { color: 'rgb(0,255,0)' },\n *       to: { color: 'rgb(255,0,255)' },\n *       step: function (state) {\n *         console.log(state.color);\n *       }\n *     });\n *\n * The above snippet will log something like this:\n *\n *     rgb(84,170,84)\n *     ...\n *     rgb(170,84,170)\n *     ...\n *     rgb(255,0,255)\n *\n * This extension also supports hexadecimal colors, in both long (`#ff00ff`)\n * and short (`#f0f`) forms.  Be aware that hexadecimal input values will be\n * converted into the equivalent RGB output values.  This is done to optimize\n * for performance.\n *\n *     var tweenable = new Tweenable();\n *     tweenable.tween({\n *       from: { color: '#0f0' },\n *       to: { color: '#f0f' },\n *       step: function (state) {\n *         console.log(state.color);\n *       }\n *     });\n *\n * This snippet will generate the same output as the one before it because\n * equivalent values were supplied (just in hexadecimal form rather than RGB):\n *\n *     rgb(84,170,84)\n *     ...\n *     rgb(170,84,170)\n *     ...\n *     rgb(255,0,255)\n *\n * ## Easing support\n *\n * Easing works somewhat differently in the Token extension.  This is because\n * some CSS properties have multiple values in them, and you might need to\n * tween each value along its own easing curve.  A basic example:\n *\n *     var tweenable = new Tweenable();\n *     tweenable.tween({\n *       from: { transform: 'translateX(0px) translateY(0px)' },\n *       to: { transform:   'translateX(100px) translateY(100px)' },\n *       easing: { transform: 'easeInQuad' },\n *       step: function (state) {\n *         console.log(state.transform);\n *       }\n *     });\n *\n * The above snippet will create values like this:\n *\n *     translateX(11.56px) translateY(11.56px)\n *     ...\n *     translateX(46.24px) translateY(46.24px)\n *     ...\n *     translateX(100px) translateY(100px)\n *\n * In this case, the values for `translateX` and `translateY` are always the\n * same for each step of the tween, because they have the same start and end\n * points and both use the same easing curve.  We can also tween `translateX`\n * and `translateY` along independent curves:\n *\n *     var tweenable = new Tweenable();\n *     tweenable.tween({\n *       from: { transform: 'translateX(0px) translateY(0px)' },\n *       to: { transform:   'translateX(100px) translateY(100px)' },\n *       easing: { transform: 'easeInQuad bounce' },\n *       step: function (state) {\n *         console.log(state.transform);\n *       }\n *     });\n *\n * The above snippet will create values like this:\n *\n *     translateX(10.89px) translateY(82.35px)\n *     ...\n *     translateX(44.89px) translateY(86.73px)\n *     ...\n *     translateX(100px) translateY(100px)\n *\n * `translateX` and `translateY` are not in sync anymore, because `easeInQuad`\n * was specified for `translateX` and `bounce` for `translateY`.  Mixing and\n * matching easing curves can make for some interesting motion in your\n * animations.\n *\n * The order of the space-separated easing curves correspond the token values\n * they apply to.  If there are more token values than easing curves listed,\n * the last easing curve listed is used.\n * @submodule Tweenable.token\n */\n\n// token function is defined above only so that dox-foundation sees it as\n// documentation and renders it.  It is never used, and is optimized away at\n// build time.\n\n;(function (Tweenable) {\n\n  /**\n   * @typedef {{\n   *   formatString: string\n   *   chunkNames: Array.<string>\n   * }}\n   * @private\n   */\n  var formatManifest;\n\n  // CONSTANTS\n\n  var R_NUMBER_COMPONENT = /(\\d|\\-|\\.)/;\n  var R_FORMAT_CHUNKS = /([^\\-0-9\\.]+)/g;\n  var R_UNFORMATTED_VALUES = /[0-9.\\-]+/g;\n  var R_RGB = new RegExp(\n    'rgb\\\\(' + R_UNFORMATTED_VALUES.source +\n    (/,\\s*/.source) + R_UNFORMATTED_VALUES.source +\n    (/,\\s*/.source) + R_UNFORMATTED_VALUES.source + '\\\\)', 'g');\n  var R_RGB_PREFIX = /^.*\\(/;\n  var R_HEX = /#([0-9]|[a-f]){3,6}/gi;\n  var VALUE_PLACEHOLDER = 'VAL';\n\n  // HELPERS\n\n  /**\n   * @param {Array.number} rawValues\n   * @param {string} prefix\n   *\n   * @return {Array.<string>}\n   * @private\n   */\n  function getFormatChunksFrom (rawValues, prefix) {\n    var accumulator = [];\n\n    var rawValuesLength = rawValues.length;\n    var i;\n\n    for (i = 0; i < rawValuesLength; i++) {\n      accumulator.push('_' + prefix + '_' + i);\n    }\n\n    return accumulator;\n  }\n\n  /**\n   * @param {string} formattedString\n   *\n   * @return {string}\n   * @private\n   */\n  function getFormatStringFrom (formattedString) {\n    var chunks = formattedString.match(R_FORMAT_CHUNKS);\n\n    if (!chunks) {\n      // chunks will be null if there were no tokens to parse in\n      // formattedString (for example, if formattedString is '2').  Coerce\n      // chunks to be useful here.\n      chunks = ['', ''];\n\n      // If there is only one chunk, assume that the string is a number\n      // followed by a token...\n      // NOTE: This may be an unwise assumption.\n    } else if (chunks.length === 1 ||\n      // ...or if the string starts with a number component (\".\", \"-\", or a\n      // digit)...\n    formattedString[0].match(R_NUMBER_COMPONENT)) {\n      // ...prepend an empty string here to make sure that the formatted number\n      // is properly replaced by VALUE_PLACEHOLDER\n      chunks.unshift('');\n    }\n\n    return chunks.join(VALUE_PLACEHOLDER);\n  }\n\n  /**\n   * Convert all hex color values within a string to an rgb string.\n   *\n   * @param {Object} stateObject\n   *\n   * @return {Object} The modified obj\n   * @private\n   */\n  function sanitizeObjectForHexProps (stateObject) {\n    Tweenable.each(stateObject, function (prop) {\n      var currentProp = stateObject[prop];\n\n      if (typeof currentProp === 'string' && currentProp.match(R_HEX)) {\n        stateObject[prop] = sanitizeHexChunksToRGB(currentProp);\n      }\n    });\n  }\n\n  /**\n   * @param {string} str\n   *\n   * @return {string}\n   * @private\n   */\n  function  sanitizeHexChunksToRGB (str) {\n    return filterStringChunks(R_HEX, str, convertHexToRGB);\n  }\n\n  /**\n   * @param {string} hexString\n   *\n   * @return {string}\n   * @private\n   */\n  function convertHexToRGB (hexString) {\n    var rgbArr = hexToRGBArray(hexString);\n    return 'rgb(' + rgbArr[0] + ',' + rgbArr[1] + ',' + rgbArr[2] + ')';\n  }\n\n  var hexToRGBArray_returnArray = [];\n  /**\n   * Convert a hexadecimal string to an array with three items, one each for\n   * the red, blue, and green decimal values.\n   *\n   * @param {string} hex A hexadecimal string.\n   *\n   * @returns {Array.<number>} The converted Array of RGB values if `hex` is a\n   * valid string, or an Array of three 0's.\n   * @private\n   */\n  function hexToRGBArray (hex) {\n\n    hex = hex.replace(/#/, '');\n\n    // If the string is a shorthand three digit hex notation, normalize it to\n    // the standard six digit notation\n    if (hex.length === 3) {\n      hex = hex.split('');\n      hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n    }\n\n    hexToRGBArray_returnArray[0] = hexToDec(hex.substr(0, 2));\n    hexToRGBArray_returnArray[1] = hexToDec(hex.substr(2, 2));\n    hexToRGBArray_returnArray[2] = hexToDec(hex.substr(4, 2));\n\n    return hexToRGBArray_returnArray;\n  }\n\n  /**\n   * Convert a base-16 number to base-10.\n   *\n   * @param {Number|String} hex The value to convert\n   *\n   * @returns {Number} The base-10 equivalent of `hex`.\n   * @private\n   */\n  function hexToDec (hex) {\n    return parseInt(hex, 16);\n  }\n\n  /**\n   * Runs a filter operation on all chunks of a string that match a RegExp\n   *\n   * @param {RegExp} pattern\n   * @param {string} unfilteredString\n   * @param {function(string)} filter\n   *\n   * @return {string}\n   * @private\n   */\n  function filterStringChunks (pattern, unfilteredString, filter) {\n    var pattenMatches = unfilteredString.match(pattern);\n    var filteredString = unfilteredString.replace(pattern, VALUE_PLACEHOLDER);\n\n    if (pattenMatches) {\n      var pattenMatchesLength = pattenMatches.length;\n      var currentChunk;\n\n      for (var i = 0; i < pattenMatchesLength; i++) {\n        currentChunk = pattenMatches.shift();\n        filteredString = filteredString.replace(\n          VALUE_PLACEHOLDER, filter(currentChunk));\n      }\n    }\n\n    return filteredString;\n  }\n\n  /**\n   * Check for floating point values within rgb strings and rounds them.\n   *\n   * @param {string} formattedString\n   *\n   * @return {string}\n   * @private\n   */\n  function sanitizeRGBChunks (formattedString) {\n    return filterStringChunks(R_RGB, formattedString, sanitizeRGBChunk);\n  }\n\n  /**\n   * @param {string} rgbChunk\n   *\n   * @return {string}\n   * @private\n   */\n  function sanitizeRGBChunk (rgbChunk) {\n    var numbers = rgbChunk.match(R_UNFORMATTED_VALUES);\n    var numbersLength = numbers.length;\n    var sanitizedString = rgbChunk.match(R_RGB_PREFIX)[0];\n\n    for (var i = 0; i < numbersLength; i++) {\n      sanitizedString += parseInt(numbers[i], 10) + ',';\n    }\n\n    sanitizedString = sanitizedString.slice(0, -1) + ')';\n\n    return sanitizedString;\n  }\n\n  /**\n   * @param {Object} stateObject\n   *\n   * @return {Object} An Object of formatManifests that correspond to\n   * the string properties of stateObject\n   * @private\n   */\n  function getFormatManifests (stateObject) {\n    var manifestAccumulator = {};\n\n    Tweenable.each(stateObject, function (prop) {\n      var currentProp = stateObject[prop];\n\n      if (typeof currentProp === 'string') {\n        var rawValues = getValuesFrom(currentProp);\n\n        manifestAccumulator[prop] = {\n          'formatString': getFormatStringFrom(currentProp)\n          ,'chunkNames': getFormatChunksFrom(rawValues, prop)\n        };\n      }\n    });\n\n    return manifestAccumulator;\n  }\n\n  /**\n   * @param {Object} stateObject\n   * @param {Object} formatManifests\n   * @private\n   */\n  function expandFormattedProperties (stateObject, formatManifests) {\n    Tweenable.each(formatManifests, function (prop) {\n      var currentProp = stateObject[prop];\n      var rawValues = getValuesFrom(currentProp);\n      var rawValuesLength = rawValues.length;\n\n      for (var i = 0; i < rawValuesLength; i++) {\n        stateObject[formatManifests[prop].chunkNames[i]] = +rawValues[i];\n      }\n\n      delete stateObject[prop];\n    });\n  }\n\n  /**\n   * @param {Object} stateObject\n   * @param {Object} formatManifests\n   * @private\n   */\n  function collapseFormattedProperties (stateObject, formatManifests) {\n    Tweenable.each(formatManifests, function (prop) {\n      var currentProp = stateObject[prop];\n      var formatChunks = extractPropertyChunks(\n        stateObject, formatManifests[prop].chunkNames);\n      var valuesList = getValuesList(\n        formatChunks, formatManifests[prop].chunkNames);\n      currentProp = getFormattedValues(\n        formatManifests[prop].formatString, valuesList);\n      stateObject[prop] = sanitizeRGBChunks(currentProp);\n    });\n  }\n\n  /**\n   * @param {Object} stateObject\n   * @param {Array.<string>} chunkNames\n   *\n   * @return {Object} The extracted value chunks.\n   * @private\n   */\n  function extractPropertyChunks (stateObject, chunkNames) {\n    var extractedValues = {};\n    var currentChunkName, chunkNamesLength = chunkNames.length;\n\n    for (var i = 0; i < chunkNamesLength; i++) {\n      currentChunkName = chunkNames[i];\n      extractedValues[currentChunkName] = stateObject[currentChunkName];\n      delete stateObject[currentChunkName];\n    }\n\n    return extractedValues;\n  }\n\n  var getValuesList_accumulator = [];\n  /**\n   * @param {Object} stateObject\n   * @param {Array.<string>} chunkNames\n   *\n   * @return {Array.<number>}\n   * @private\n   */\n  function getValuesList (stateObject, chunkNames) {\n    getValuesList_accumulator.length = 0;\n    var chunkNamesLength = chunkNames.length;\n\n    for (var i = 0; i < chunkNamesLength; i++) {\n      getValuesList_accumulator.push(stateObject[chunkNames[i]]);\n    }\n\n    return getValuesList_accumulator;\n  }\n\n  /**\n   * @param {string} formatString\n   * @param {Array.<number>} rawValues\n   *\n   * @return {string}\n   * @private\n   */\n  function getFormattedValues (formatString, rawValues) {\n    var formattedValueString = formatString;\n    var rawValuesLength = rawValues.length;\n\n    for (var i = 0; i < rawValuesLength; i++) {\n      formattedValueString = formattedValueString.replace(\n        VALUE_PLACEHOLDER, +rawValues[i].toFixed(4));\n    }\n\n    return formattedValueString;\n  }\n\n  /**\n   * Note: It's the duty of the caller to convert the Array elements of the\n   * return value into numbers.  This is a performance optimization.\n   *\n   * @param {string} formattedString\n   *\n   * @return {Array.<string>|null}\n   * @private\n   */\n  function getValuesFrom (formattedString) {\n    return formattedString.match(R_UNFORMATTED_VALUES);\n  }\n\n  /**\n   * @param {Object} easingObject\n   * @param {Object} tokenData\n   * @private\n   */\n  function expandEasingObject (easingObject, tokenData) {\n    Tweenable.each(tokenData, function (prop) {\n      var currentProp = tokenData[prop];\n      var chunkNames = currentProp.chunkNames;\n      var chunkLength = chunkNames.length;\n\n      var easing = easingObject[prop];\n      var i;\n\n      if (typeof easing === 'string') {\n        var easingChunks = easing.split(' ');\n        var lastEasingChunk = easingChunks[easingChunks.length - 1];\n\n        for (i = 0; i < chunkLength; i++) {\n          easingObject[chunkNames[i]] = easingChunks[i] || lastEasingChunk;\n        }\n\n      } else {\n        for (i = 0; i < chunkLength; i++) {\n          easingObject[chunkNames[i]] = easing;\n        }\n      }\n\n      delete easingObject[prop];\n    });\n  }\n\n  /**\n   * @param {Object} easingObject\n   * @param {Object} tokenData\n   * @private\n   */\n  function collapseEasingObject (easingObject, tokenData) {\n    Tweenable.each(tokenData, function (prop) {\n      var currentProp = tokenData[prop];\n      var chunkNames = currentProp.chunkNames;\n      var chunkLength = chunkNames.length;\n\n      var firstEasing = easingObject[chunkNames[0]];\n      var typeofEasings = typeof firstEasing;\n\n      if (typeofEasings === 'string') {\n        var composedEasingString = '';\n\n        for (var i = 0; i < chunkLength; i++) {\n          composedEasingString += ' ' + easingObject[chunkNames[i]];\n          delete easingObject[chunkNames[i]];\n        }\n\n        easingObject[prop] = composedEasingString.substr(1);\n      } else {\n        easingObject[prop] = firstEasing;\n      }\n    });\n  }\n\n  Tweenable.prototype.filter.token = {\n    'tweenCreated': function (currentState, fromState, toState, easingObject) {\n      sanitizeObjectForHexProps(currentState);\n      sanitizeObjectForHexProps(fromState);\n      sanitizeObjectForHexProps(toState);\n      this._tokenData = getFormatManifests(currentState);\n    },\n\n    'beforeTween': function (currentState, fromState, toState, easingObject) {\n      expandEasingObject(easingObject, this._tokenData);\n      expandFormattedProperties(currentState, this._tokenData);\n      expandFormattedProperties(fromState, this._tokenData);\n      expandFormattedProperties(toState, this._tokenData);\n    },\n\n    'afterTween': function (currentState, fromState, toState, easingObject) {\n      collapseFormattedProperties(currentState, this._tokenData);\n      collapseFormattedProperties(fromState, this._tokenData);\n      collapseFormattedProperties(toState, this._tokenData);\n      collapseEasingObject(easingObject, this._tokenData);\n    }\n  };\n\n} (Tweenable));\n\n}).call(null);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

"use strict";
eval("\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Plugins_1 = __webpack_require__(5);\nwindow['dreamsark'].exposes({\n    ProgressBar: __webpack_require__(4)\n});\nvar ProgressBar = (function (_super) {\n    __extends(ProgressBar, _super);\n    function ProgressBar() {\n        _super.call(this);\n    }\n    return ProgressBar;\n}(Plugins_1.Plugins));\nexports.ProgressBar = ProgressBar;\n/**\n * Auto install itself\n */\nwindow['dreamsark'].install({\n    ProgressBar: ProgressBar\n});\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUHJvZ3Jlc3NCYXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJQcm9ncmVzc0Jhci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSx3QkFBc0IsV0FBVyxDQUFDLENBQUE7QUFFbEMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxDQUFDLE9BQU8sQ0FBQztJQUN4QixXQUFXLEVBQUUsT0FBTyxDQUFDLGdCQUFnQixDQUFDO0NBQ3pDLENBQUMsQ0FBQztBQUVIO0lBQWlDLCtCQUFPO0lBRXBDO1FBQ0ksaUJBQU8sQ0FBQztJQUNaLENBQUM7SUFFTCxrQkFBQztBQUFELENBQUMsQUFORCxDQUFpQyxpQkFBTyxHQU12QztBQU5ZLG1CQUFXLGNBTXZCLENBQUE7QUFFRDs7R0FFRztBQUNILE1BQU0sQ0FBQyxXQUFXLENBQUMsQ0FBQyxPQUFPLENBQUM7SUFDeEIsYUFBQSxXQUFXO0NBQ2QsQ0FBQyxDQUFDIn0=//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9yZXNvdXJjZXMvYXNzZXRzL3R5cGVzY3JpcHQvUGx1Z2lucy9Qcm9ncmVzc0Jhci5qcz9hMWRjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCBmdW5jdGlvbiAoZCwgYikge1xuICAgIGZvciAodmFyIHAgaW4gYikgaWYgKGIuaGFzT3duUHJvcGVydHkocCkpIGRbcF0gPSBiW3BdO1xuICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxuICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbn07XG52YXIgUGx1Z2luc18xID0gcmVxdWlyZShcIi4vUGx1Z2luc1wiKTtcbndpbmRvd1snZHJlYW1zYXJrJ10uZXhwb3Nlcyh7XG4gICAgUHJvZ3Jlc3NCYXI6IHJlcXVpcmUoXCJwcm9ncmVzc2Jhci5qc1wiKVxufSk7XG52YXIgUHJvZ3Jlc3NCYXIgPSAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhQcm9ncmVzc0JhciwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBQcm9ncmVzc0JhcigpIHtcbiAgICAgICAgX3N1cGVyLmNhbGwodGhpcyk7XG4gICAgfVxuICAgIHJldHVybiBQcm9ncmVzc0Jhcjtcbn0oUGx1Z2luc18xLlBsdWdpbnMpKTtcbmV4cG9ydHMuUHJvZ3Jlc3NCYXIgPSBQcm9ncmVzc0Jhcjtcbi8qKlxuICogQXV0byBpbnN0YWxsIGl0c2VsZlxuICovXG53aW5kb3dbJ2RyZWFtc2FyayddLmluc3RhbGwoe1xuICAgIFByb2dyZXNzQmFyOiBQcm9ncmVzc0JhclxufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0ptYVd4bElqb2lVSEp2WjNKbGMzTkNZWEl1YW5NaUxDSnpiM1Z5WTJWU2IyOTBJam9pSWl3aWMyOTFjbU5sY3lJNld5SlFjbTluY21WemMwSmhjaTUwY3lKZExDSnVZVzFsY3lJNlcxMHNJbTFoY0hCcGJtZHpJam9pT3pzN096czdRVUZCUVN4M1FrRkJjMElzVjBGQlZ5eERRVUZETEVOQlFVRTdRVUZGYkVNc1RVRkJUU3hEUVVGRExGZEJRVmNzUTBGQlF5eERRVUZETEU5QlFVOHNRMEZCUXp0SlFVTjRRaXhYUVVGWExFVkJRVVVzVDBGQlR5eERRVUZETEdkQ1FVRm5RaXhEUVVGRE8wTkJRM3BETEVOQlFVTXNRMEZCUXp0QlFVVklPMGxCUVdsRExDdENRVUZQTzBsQlJYQkRPMUZCUTBrc2FVSkJRVThzUTBGQlF6dEpRVU5hTEVOQlFVTTdTVUZGVEN4clFrRkJRenRCUVVGRUxFTkJRVU1zUVVGT1JDeERRVUZwUXl4cFFrRkJUeXhIUVUxMlF6dEJRVTVaTEcxQ1FVRlhMR05CVFhaQ0xFTkJRVUU3UVVGRlJEczdSMEZGUnp0QlFVTklMRTFCUVUwc1EwRkJReXhYUVVGWExFTkJRVU1zUTBGQlF5eFBRVUZQTEVOQlFVTTdTVUZEZUVJc1lVRkJRU3hYUVVGWE8wTkJRMlFzUTBGQlF5eERRVUZESW4wPVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyByZXNvdXJjZXMvYXNzZXRzL3R5cGVzY3JpcHQvUGx1Z2lucy9Qcm9ncmVzc0Jhci5qcyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }
/******/ ]);