$columns: 12 !default;
$gutter: 0.5rem !default;

$columns-class: 'columns' !default;
$offset-class: 'offset' !default;

$breakpoints: (
                (mobile),
                (small, 768px),
                (desktop, 992px),
                (large, 1200px)
) !default;

/**
 * Calculate column size percentage
 */
@function get-col-percent($column-num) {
  @return $column-num / $columns * 100%;
}

/**
 * Spacing mixin to create uniform margin/padding
 */
@mixin spacing($value, $type: margin, $orientation: vertical) {
  @if $orientation == vertical {
    #{$type}-top: $value;
    #{$type}-bottom: $value;
  } @else {
    #{$type}-left: $value;
    #{$type}-right: $value;
  }
}

%#{$columns-class} {
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  flex-grow: 0;
  flex-shrink: 0;
  @include spacing(($gutter), padding, horizontal);
}

%#{$columns-class}-flex {
  @extend %#{$columns-class};
  flex-grow: 1;
  flex-basis: 0;
  max-width: 100%;
}

@mixin grid-base($namespace) {

  @include option(#{$columns-class}-#{$namespace}) {
    @extend %#{$columns-class}-flex;
  }

  @for $i from 1 through $columns {
    @include option(#{$namespace}-#{$i}-#{$columns-class}) {
      @extend %#{$columns-class};
    }
  }

}

@mixin grid-sizes($namespace) {

  $temp: null;

  @for $i from 1 through $columns {

    @if ($namespace == 'mobile') {
      $temp: '';
    } @else {
      $temp: $namespace+"-";
    }

    @include option(#{$temp}#{$i}-#{$columns-class}) {
      flex-basis: get-col-percent($i);
      max-width: get-col-percent($i);
    }

  }

  @for $i from 1 through $columns {

    // Don't include the .off class for the last column
    @if ($i != $columns) {
      @include option(#{$offset-class}-#{$temp}#{$i}) {
        margin-left: get-col-percent($i);
      }
    }

  }

}

//@mixin dreamsark-segment() {



  @include component(segments) {

    box-sizing: border-box;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    @include spacing((-$gutter), margin, horizontal);
    //margin: 0 auto;
    //justify-content: center;
    //width: 97%;

    @include component(segment) {

      @include part(content) {
        margin: .5rem;
        padding: 1.5rem;
        border: 1px solid color(white, dark);
        background: color(white);
        border-radius: 0.3125rem;
        box-shadow: 0 10px 10px 0 rgba(199, 199, 199, 0.13);
      }

      /**
      * GRID CONSTRUCTION
      */
      @each $val in $breakpoints {
        @include grid-base(nth($val, 1));
      }

      @each $val in $breakpoints {

        @if length($val) == 1 {
          @include grid-sizes(nth($val, 1));
        } @else {
          @media only screen and (min-width: #{nth($val, 2)}) {
            @include grid-sizes(nth($val, 1));
          }
        }
      }

    }

  }

  //@include component(container, segmentss) {
  //  display: flex;
  //  flex-wrap: wrap;
  //  margin: 0 auto;
  //  flex-direction: column;
  //  //justify-content: center;
  //
  //  width: 97%;
  //
  //  @include respond-to('desktop') {
  //    //flex-direction: row;
  //    //justify-content: flex-start;
  //    width: 80%;
  //  }
  //
  //  @include option(fluid) {
  //    width: 100%;
  //    padding: 1em;
  //  }
  //
  //}
  //
  //@include component(segment) {
  //
  //  display: flex;
  //  flex-wrap: wrap;
  //  flex-direction: column;
  //  width: 100%;
  //  padding: 1.5em;
  //  margin: .5% 0;
  //
  //  border: 1px solid color(white, dark);
  //  background: color(white);
  //  border-radius: 0.3125rem;
  //  box-shadow: 0 10px 10px 0 rgba(199, 199, 199, 0.13);
  //
  //  @include respond-to(desktop) {
  //    flex-direction: row;
  //    margin: .5%;
  //    padding: 1em;
  //  }
  //
  //  @for $i from 1 through 10 {
  //
  //    @include option(#{$i}-columns) {
  //      flex-basis: $i * 10 - 1 * 1%;
  //
  //      @include respond-to(desktop) {
  //        width: $i * 10 - 1 * 1%;
  //      }
  //
  //    }
  //
  //  }
  //
  //  @include option(responsive, fluid) {
  //    flex: auto;
  //  }
  //
  //  @include option(end) {
  //    align-self: flex-end;
  //  }
  //
  //  @include option(transparent) {
  //    background: transparent;
  //    border: none;
  //    box-shadow: none;
  //  }
  //
  //  @include option(horizontal) {
  //    flex-direction: column;
  //  }
  //
  //  @include option(vertical) {
  //    flex-direction: row;
  //  }
  //
  //  @include option(hidden-on-mobile) {
  //    //todo
  //  }
  //
  //  /*
  //  * PARTS
  //  */
  //  @include part(header) {
  //
  //    @include title($size: large);
  //    //font-size: $h1;
  //
  //    p {
  //      margin: 10px 0 0 0;
  //      font-size: medium;
  //    }
  //
  //  }
  //
  //  @include part(content) {
  //    margin: 1em 0 0 0;
  //  }
  //
  //}

//}

.item {
  background-color: CornflowerBlue;
  border-radius: 2px;
  display: block;
  height: 2rem;
  margin-bottom: 1rem;
  width: 100%
}

